<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="https://castorfou.github.io/guillaume_blog/feed.xml" rel="self" type="application/atom+xml" /><link href="https://castorfou.github.io/guillaume_blog/" rel="alternate" type="text/html" /><updated>2022-09-15T02:38:32-05:00</updated><id>https://castorfou.github.io/guillaume_blog/feed.xml</id><title type="html">Guillaume’s blog</title><subtitle>Journey for a datascientist</subtitle><entry><title type="html">nbdev2 - first steps</title><link href="https://castorfou.github.io/guillaume_blog/blog/nbdev2.html" rel="alternate" type="text/html" title="nbdev2 - first steps" /><published>2022-09-12T00:00:00-05:00</published><updated>2022-09-12T00:00:00-05:00</updated><id>https://castorfou.github.io/guillaume_blog/blog/nbdev2</id><content type="html" xml:base="https://castorfou.github.io/guillaume_blog/blog/nbdev2.html"><![CDATA[<!--
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: _notebooks/2022-09-12-nbdev2.ipynb
-->

<div class="container" id="notebook-container">
        
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<p>fastai has just released <a href="https://nbdev.fast.ai/">nbdev2</a>.</p>
<p>This is a complete rewrite with quarto. I like how they displayed features in that card</p>
<p><img src="https://nbdev.fast.ai/images/card.png" alt="" /></p>

</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<h1 id="Support">Support<a class="anchor-link" href="#Support"> </a></h1>
</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<p>There is a <a href="https://forums.fast.ai/c/nbdev/48">nbdev section</a> in fastai forum.</p>
<p>There is a channel <a href="https://discord.com/channels/689892369998676007/887694559952400424">#nbdev-help</a> at fastai discord.</p>
<p>And <a href="https://github.com/fastai/nbdev/issues">issues page</a> in github fastai/nbdev repo.</p>

</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<h1 id="Walkthrough">Walkthrough<a class="anchor-link" href="#Walkthrough"> </a></h1>
</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<p>There is a 90 min video: <a href="https://www.youtube.com/watch?v=l7zS8Ld4_iA&amp;ab_channel=JeremyHoward">nbdev tutorial</a> -- zero to published project in 90 minutes</p>
<p>I follow here this tutorial.</p>
<p>Here are the big steps:</p>

</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<h2 id="create-github-project">create github project<a class="anchor-link" href="#create-github-project"> </a></h2>
</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<ul>
<li>create a new project with github: <a href="https://github.com/castorfou/dataset_tools">dataset_tools</a>. Give a description it will be reused by nbdev</li>
</ul>

</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<h2 id="integrate-nbdev-in-your-python-environment">integrate <code>nbdev</code> in your python environment<a class="anchor-link" href="#integrate-nbdev-in-your-python-environment"> </a></h2>
</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<ul>
<li>create a local conda env <code>dataset_tools</code> with what is required to develop this library</li>
</ul>

</div>
</div>
</div>
    
    
<div class="cell border-box-sizing code_cell rendered">
<div class="input">

<div class="inner_cell">
    <div class="input_area">
<div class=" highlight hl-ipython3"><pre><span></span><span class="o">!</span>cat /home/guillaume/_conda_env/dataset_tools.txt
</pre></div>

    </div>
</div>
</div>

<div class="output_wrapper">
<div class="output">

<div class="output_area">

<div class="output_subarea output_stream output_stdout output_text">
<pre>conda remove --name dataset_tools --all
conda create --name dataset_tools python=3.9
conda activate dataset_tools
conda install ipykernel
python -m ipykernel install --user --name=dataset_tools
pip install nbdev -U
pip install pandas
</pre>
</div>
</div>

</div>
</div>

</div>
    

    
    
<div class="cell border-box-sizing code_cell rendered">
<div class="input">

<div class="inner_cell">
    <div class="input_area">
<div class=" highlight hl-ipython3"><pre><span></span><span class="kn">import</span> <span class="nn">sys</span>
<span class="o">!{</span>sys.prefix<span class="o">}</span>/bin/pip list<span class="p">|</span>grep nbdev
</pre></div>

    </div>
</div>
</div>

<div class="output_wrapper">
<div class="output">

<div class="output_area">

<div class="output_subarea output_stream output_stdout output_text">
<pre>nbdev              2.2.10
</pre>
</div>
</div>

</div>
</div>

</div>
    

<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<h2 id="clone-repo-and-turned-it-into-a-nbdev-repo">clone repo and turned it into a nbdev repo<a class="anchor-link" href="#clone-repo-and-turned-it-into-a-nbdev-repo"> </a></h2>
</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<ul>
<li>clone repo <code>dataset_tools</code> and turn it into a nbdev repo</li>
</ul>

</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<div class="highlight"><pre><span></span>git clone git@github.com:castorfou/dataset_tools.git
conda activate dataset_tools
<span class="nb">cd</span> dataset_tools
</pre></div>

</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<h2 id="nbdev_-commands-are-ready-to-be-used">nbdev_ commands are ready to be used<a class="anchor-link" href="#nbdev_-commands-are-ready-to-be-used"> </a></h2>
</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<ul>
<li>nbdev can be used from here. For example <code>nbdev_help</code>  to display all nbdev_ commands and what it does. And more detail can be got with <code>-h</code>: <code>nbdev_new -h</code></li>
</ul>

</div>
</div>
</div>
    
    
<div class="cell border-box-sizing code_cell rendered">
<div class="input">

<div class="inner_cell">
    <div class="input_area">
<div class=" highlight hl-ipython3"><pre><span></span><span class="o">!{</span>sys.prefix<span class="o">}</span>/bin/nbdev_help
</pre></div>

    </div>
</div>
</div>

<div class="output_wrapper">
<div class="output">

<div class="output_area">

<div class="output_subarea output_stream output_stdout output_text">
<pre><span class="ansi-blue-intense-fg ansi-bold">nbdev_bump_version</span>              Increment version in settings.ini by one
<span class="ansi-blue-intense-fg ansi-bold">nbdev_changelog</span>                 Create a CHANGELOG.md file from closed and labeled GitHub issues
<span class="ansi-blue-intense-fg ansi-bold">nbdev_clean</span>                     Clean all notebooks in `fname` to avoid merge conflicts
<span class="ansi-blue-intense-fg ansi-bold">nbdev_conda</span>                     Create a `meta.yaml` file ready to be built into a package, and optionally build and upload it
<span class="ansi-blue-intense-fg ansi-bold">nbdev_create_config</span>             Create a config file.
<span class="ansi-blue-intense-fg ansi-bold">nbdev_deploy</span>                    Deploy docs to GitHub Pages
<span class="ansi-blue-intense-fg ansi-bold">nbdev_docs</span>                      Create Quarto docs and README.md
<span class="ansi-blue-intense-fg ansi-bold">nbdev_export</span>                    Export notebooks in `path` to Python modules
<span class="ansi-blue-intense-fg ansi-bold">nbdev_filter</span>                    A notebook filter for Quarto
<span class="ansi-blue-intense-fg ansi-bold">nbdev_fix</span>                       Create working notebook from conflicted notebook `nbname`
<span class="ansi-blue-intense-fg ansi-bold">nbdev_help</span>                      Show help for all console scripts
<span class="ansi-blue-intense-fg ansi-bold">nbdev_install</span>                   Install Quarto and the current library
<span class="ansi-blue-intense-fg ansi-bold">nbdev_install_hooks</span>             Install Jupyter and git hooks to automatically clean, trust, and fix merge conflicts in notebooks
<span class="ansi-blue-intense-fg ansi-bold">nbdev_install_quarto</span>            Install latest Quarto on macOS or Linux, prints instructions for Windows
<span class="ansi-blue-intense-fg ansi-bold">nbdev_merge</span>                     Git merge driver for notebooks
<span class="ansi-blue-intense-fg ansi-bold">nbdev_migrate</span>                   Convert all directives and callouts in `fname` from v1 to v2
<span class="ansi-blue-intense-fg ansi-bold">nbdev_new</span>                       Create an nbdev project.
<span class="ansi-blue-intense-fg ansi-bold">nbdev_prepare</span>                   Export, test, and clean notebooks, and render README if needed
<span class="ansi-blue-intense-fg ansi-bold">nbdev_preview</span>                   Preview docs locally
<span class="ansi-blue-intense-fg ansi-bold">nbdev_pypi</span>                      Create and upload Python package to PyPI
<span class="ansi-blue-intense-fg ansi-bold">nbdev_quarto</span>                    Create Quarto docs and README.md
<span class="ansi-blue-intense-fg ansi-bold">nbdev_readme</span>                    Render README.md from index.ipynb
<span class="ansi-blue-intense-fg ansi-bold">nbdev_release_both</span>              Release both conda and PyPI packages
<span class="ansi-blue-intense-fg ansi-bold">nbdev_release_gh</span>                Calls `nbdev_changelog`, lets you edit the result, then pushes to git and calls `nbdev_release_git`
<span class="ansi-blue-intense-fg ansi-bold">nbdev_release_git</span>               Tag and create a release in GitHub for the current version
<span class="ansi-blue-intense-fg ansi-bold">nbdev_sidebar</span>                   Create sidebar.yml
<span class="ansi-blue-intense-fg ansi-bold">nbdev_test</span>                      Test in parallel notebooks matching `path`, passing along `flags`
<span class="ansi-blue-intense-fg ansi-bold">nbdev_trust</span>                     Trust notebooks matching `fname`
<span class="ansi-blue-intense-fg ansi-bold">nbdev_update</span>                    Propagate change in modules matching `fname` to notebooks that created them
</pre>
</div>
</div>

</div>
</div>

</div>
    

<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<ul>
<li><code>nbdev_new</code>. It is creating the structure and files such as settings.ini.</li>
<li>from base environment we can start <code>jupyter notebook</code>. It is advised to install nb_extensions (<code>pip install jupyter_contrib_nbextensions</code>), and activate TOC2. Open <code>00_core.ipynb</code> with <code>dataset_tools</code> kernel. Rename <code>00_core.ipynb</code> --&gt; <code>00_container.ipynb</code></li>
</ul>

</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<h2 id="and-#|-prefix-in-notebooks-as-well">and <code>#|</code> prefix in notebooks as well<a class="anchor-link" href="#and-#|-prefix-in-notebooks-as-well"> </a></h2>
</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<p>Jeremy explains then what are <code>#|</code> used by quarto and nbdev.</p>
<p>And for example <code>#| hide</code> will allow to be executed but hide in your documentation.</p>
<p>Actually from a single notebook, you have 3 usages:</p>
<ul>
<li>the notebook by itself -  all cells are executed, whatever are the prefix <code>#|</code> that you display on cells</li>
<li>the python file -  only the cells with <code>#| export</code> will be published in a python file referenced as <code>#| default_exp &lt;name of python file&gt;</code>. A new file is genreated when <code>nbdev_export</code> is called.</li>
<li>the documentation - all cells are used, except the one started with <code>#| hide</code>. Seems to be dynamically generated (when <code>nbdev_preview</code> is running?). <code>#| export</code> are handled specifically: if you have import, nothing is displayed. If you have code, definitions and docstrings are exported, and arguments as well.</li>
</ul>

</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<p>There is an easy way to describe arguments of a function.</p>
<p>Just make some indentation with comments such as in</p>
<div class="highlight"><pre><span></span><span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> 
                 <span class="n">cle</span> <span class="p">:</span> <span class="nb">str</span><span class="p">,</span> <span class="c1"># la clé du container</span>
                 <span class="n">dataset</span> <span class="p">:</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span> <span class="o">=</span> <span class="kc">None</span><span class="p">,</span> <span class="c1"># le dataset</span>
                 <span class="n">colonnes_a_masquer</span> <span class="p">:</span> <span class="nb">list</span> <span class="o">=</span> <span class="p">[],</span> <span class="c1"># les colonnes à masquer</span>
                 <span class="n">colonnes_a_conserver</span> <span class="p">:</span> <span class="nb">list</span> <span class="o">=</span> <span class="p">[]</span> <span class="c1"># les colonnes qui ne seront pas transformées</span>
                <span class="p">):</span>
</pre></div>

</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<h3 id="show_doc">show_doc<a class="anchor-link" href="#show_doc"> </a></h3>
</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<p>and we can directly see the effect of it by calling <code>show_doc</code> (<code>show_doc(Container)</code>). You can even call show_doc on code not written with nbdev, or not even written by you.</p>

</div>
</div>
</div>
    
    
<div class="cell border-box-sizing code_cell rendered">

<div class="output_wrapper">
<div class="output">

<div class="output_area">

<div class="output_subarea output_stream output_stderr output_text">
<pre>/home/guillaume/miniconda/envs/dataset_tools/lib/python3.9/site-packages/fastcore/docscrape.py:225: UserWarning: Unknown section See Also
  else: warn(msg)
/home/guillaume/miniconda/envs/dataset_tools/lib/python3.9/site-packages/fastcore/docscrape.py:225: UserWarning: Unknown section Examples
  else: warn(msg)
</pre>
</div>
</div>

<div class="output_area">


<div class="output_markdown rendered_html output_subarea output_execute_result">
<hr />
<h3 id="DataFrame">DataFrame<a class="anchor-link" href="#DataFrame"> </a></h3><blockquote>
<pre><code> DataFrame (data=None, index:Axes|None=None, columns:Axes|None=None,
            dtype:Dtype|None=None, copy:bool|None=None)</code></pre>
</blockquote>
<p>Two-dimensional, size-mutable, potentially heterogeneous tabular data.</p>
<p>Data structure also contains labeled axes (rows and columns).
Arithmetic operations align on both row and column labels. Can be
thought of as a dict-like container for Series objects. The primary
pandas data structure.</p>
<table>
<thead><tr>
<th></th>
<th><strong>Type</strong></th>
<th><strong>Default</strong></th>
<th><strong>Details</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>data</td>
<td>NoneType</td>
<td>None</td>
<td>Dict can contain Series, arrays, constants, dataclass or list-like objects. If<br />data is a dict, column order follows insertion-order. If a dict contains Series<br />which have an index defined, it is aligned by its index.<br /><br />.. versionchanged:: 0.25.0<br />   If data is a list of dicts, column order follows insertion-order.</td>
</tr>
<tr>
<td>index</td>
<td>Axes | None</td>
<td>None</td>
<td>Index to use for resulting frame. Will default to RangeIndex if<br />no indexing information part of input data and no index provided.</td>
</tr>
<tr>
<td>columns</td>
<td>Axes | None</td>
<td>None</td>
<td>Column labels to use for resulting frame when data does not have them,<br />defaulting to RangeIndex(0, 1, 2, ..., n). If data contains column labels,<br />will perform column selection instead.</td>
</tr>
<tr>
<td>dtype</td>
<td>Dtype | None</td>
<td>None</td>
<td>Data type to force. Only a single dtype is allowed. If None, infer.</td>
</tr>
<tr>
<td>copy</td>
<td>bool | None</td>
<td>None</td>
<td>Copy data from inputs.<br />For dict data, the default of None behaves like <code>copy=True</code>.  For DataFrame<br />or 2d ndarray input, the default of None behaves like <code>copy=False</code>.<br /><br />.. versionchanged:: 1.3.0</td>
</tr>
</tbody>
</table>

</div>

</div>

</div>
</div>

</div>
    

<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<h3 id="unit-testing">unit testing<a class="anchor-link" href="#unit-testing"> </a></h3>
</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<p>There are some basic testing functionalty available by importing fastcore. <code>from fastcore.test import *</code></p>
<p>With <code>test_eq</code> very closed to <code>assert</code> and <code>test_ne</code> closed to <code>assert not</code></p>

</div>
</div>
</div>
    
    
<div class="cell border-box-sizing code_cell rendered">

<div class="output_wrapper">
<div class="output">

<div class="output_area">


<div class="output_markdown rendered_html output_subarea output_execute_result">
<hr />
<p><a href="https://github.com/fastai/fastcore/blob/master/fastcore/test.py#LNone">source</a>{target="_blank" style="float:right; font-size:smaller"}</p>
<h3 id="test_ne">test_ne<a class="anchor-link" href="#test_ne"> </a></h3><blockquote>
<pre><code> test_ne (a, b)</code></pre>
</blockquote>
<p><code>test</code> that <code>a!=b</code></p>

</div>

</div>

</div>
</div>

</div>
    

<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<p>This is convenient to integrate all the unit tests that way. When you will export by running <code>Restart &amp; Run All</code>, if an error is met, export won't be done.</p>

</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<p>And one can run <code>nbdev_test</code> from the command line.</p>

</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<h3 id="@patch---define-method-out-of-its-class">@patch - define method out of its class<a class="anchor-link" href="#@patch---define-method-out-of-its-class"> </a></h3>
</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<p>Just by adding this import</p>
<div class="highlight"><pre><span></span><span class="kn">from</span> <span class="nn">fastcore.utils</span> <span class="kn">import</span> <span class="o">*</span>
</pre></div>
<p>one can use</p>
<div class="highlight"><pre><span></span><span class="nd">@patch</span>
<span class="k">def</span> <span class="nf">new_method</span><span class="p">(</span><span class="bp">self</span><span class="p">:</span><span class="n">myclass</span><span class="p">):</span>
    <span class="k">pass</span>
</pre></div>

</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<h3 id="nbdev_export"><code>nbdev_export</code><a class="anchor-link" href="#nbdev_export"> </a></h3>
</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<p>from command line, one can run <code>nbdev_export</code></p>
<p>or directly from jupyter, for example will be executing <code>Restart &amp; Run All</code></p>
<div class="highlight"><pre><span></span><span class="c1">#| hide</span>
<span class="kn">import</span> <span class="nn">nbdev</span><span class="p">;</span> <span class="n">nbdev</span><span class="o">.</span><span class="n">nbdev_export</span><span class="p">()</span>
</pre></div>

</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<p>And we can install it to be used directly by running <code>pip install -e .</code></p>
<p>It means that you can now import your project with</p>
<p><code>from dataset_tools.container import *</code></p>

</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<p>When it will be published (pypi or conda), it will be installable by calling</p>
<p><code>pip install dataset-tools</code></p>
<p>or</p>
<p><code>conda install -c fastai dataset-tools</code></p>
<p>NB: see how <code>_</code> has been turned into <code>-</code>, and for that to happen we have to update <code>lib_name</code> and <code>lib_path</code> in <code>settings.ini</code> by replacing <code>_</code>with <code>-</code></p>
<p>NB2: it is still confusing for me. It looks like modifying <code>lib_path</code> is not a good optiom.</p>

</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<h3 id="index.ipynb">index.ipynb<a class="anchor-link" href="#index.ipynb"> </a></h3>
</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<p>Here it is a good idea to give overview about how to use it.</p>
<p>By importing your library and start using it.</p>
<p>And it will be exported as the homepage of your lib.</p>
<p>Just have to decide what should land in index and what should land in module page.</p>

</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<h3 id="nbdev_preview"><code>nbdev_preview</code><a class="anchor-link" href="#nbdev_preview"> </a></h3>
</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<p>Just run it from command line</p>
<div class="highlight"><pre><span></span>nbdev_preview
</pre></div>
<p>and it is accessible from <a href="http://localhost:3000">http://localhost:3000</a>.</p>
<p>This is a quarto webserver. The 1st time you launch it it will install quarto for you. On ubuntu this is a standard package so it will be updated regularly.</p>

</div>
</div>
</div>
    
    
<div class="cell border-box-sizing code_cell rendered">
<div class="input">

<div class="inner_cell">
    <div class="input_area">
<div class=" highlight hl-ipython3"><pre><span></span><span class="kn">from</span> <span class="nn">getpass</span> <span class="kn">import</span> <span class="n">getpass</span>
<span class="o">!</span><span class="nb">echo</span> <span class="o">{</span>getpass<span class="o">()}</span> <span class="p">|</span> sudo -S apt-cache show quarto
</pre></div>

    </div>
</div>
</div>

<div class="output_wrapper">
<div class="output">

<div class="output_area">

<div class="output_subarea output_stream output_stdout output_text">
<pre>········
[sudo] password for guillaume: Package: quarto
Status: install ok installed
Priority: optional
Section: user/text
Installed-Size: 242759
Maintainer: RStudio, PBC &lt;quarto@rstudio.org&gt;
Architecture: amd64
Version: 1.1.189
Description: Quarto is an academic, scientific, and technical publishing system built on Pandoc.
Description-md5: 516c872f9c3577457bbd01eac38f8130
Homepage: https://github.com/quarto-dev/quarto-cli

</pre>
</div>
</div>

</div>
</div>

</div>
    

<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<h3 id="nbdev_test"><code>nbdev_test</code><a class="anchor-link" href="#nbdev_test"> </a></h3>
</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<p>As mentionned earlier, one can run <code>nbdev_test</code> to execute all tests in all notebooks.</p>
<p>If it fails, Hamel has shared his dev workflow. He runs <code>Restart kernel &amp; run All</code>, and use <code>%debug</code> magic command to enter debug mode.</p>
<p>You then have access to all <code>ipdb</code> commands such as h for help, p <code>var</code> to print content of <code>var</code>, w for stacktraces</p>

</div>
</div>
</div>
    
    
<div class="cell border-box-sizing code_cell rendered">
<div class="input">

<div class="inner_cell">
    <div class="input_area">
<div class=" highlight hl-ipython3"><pre><span></span><span class="o">%</span><span class="k">debug</span>
</pre></div>

    </div>
</div>
</div>

<div class="output_wrapper">
<div class="output">

<div class="output_area">

<div class="output_subarea output_stream output_stdout output_text">
<pre>&gt; <span class="ansi-green-fg">/tmp/ipykernel_2453/349085080.py</span>(1)<span class="ansi-cyan-fg">&lt;cell line: 1&gt;</span><span class="ansi-blue-fg">()</span>
<span class="ansi-green-fg">----&gt; 1 </span>show_doc<span class="ansi-blue-fg">(</span>test_eq<span class="ansi-blue-fg">)</span>

ipdb&gt; h

Documented commands (type help &lt;topic&gt;):
========================================
EOF    commands   enable    ll        pp       s                until 
a      condition  exit      longlist  psource  skip_hidden      up    
alias  cont       h         n         q        skip_predicates  w     
args   context    help      next      quit     source           whatis
b      continue   ignore    p         r        step             where 
break  d          interact  pdef      restart  tbreak         
bt     debug      j         pdoc      return   u              
c      disable    jump      pfile     retval   unalias        
cl     display    l         pinfo     run      undisplay      
clear  down       list      pinfo2    rv       unt            

Miscellaneous help topics:
==========================
exec  pdb

ipdb&gt; q
</pre>
</div>
</div>

</div>
</div>

</div>
    

<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<h3 id="Golden-rule:-don't-mix-imports-and-code">Golden rule: don't mix imports and code<a class="anchor-link" href="#Golden-rule:-don't-mix-imports-and-code"> </a></h3>
</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<p>For a reason it is asked not to mix cells with imports and code.</p>
<p>I am not sure what is the core reason for that. Something due to show_doc or doc generation?</p>
<p>During my tests, I have seen something complaining about it after running <code>nbdev_export</code> or <code>nbdev_test</code> but cannot reproduce that. Hmmm</p>

</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<h3 id="nbdev_clean"><code>nbdev_clean</code><a class="anchor-link" href="#nbdev_clean"> </a></h3>
</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<p>Just to remove unnecessary metadata in ipynb files.</p>

</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<p>Will open an issue, because it fails to run here</p>
<div class="highlight"><pre><span></span><span class="o">(</span>dataset_tools<span class="o">)</span> guillaume@LK06LPF2LTSSL:~/git/dataset_tools$ nbdev_clean
/home/guillaume/miniconda/envs/dataset_tools/lib/python3.9/site-packages/nbdev/clean.py:110: UserWarning: Failed to clean notebook
  warn<span class="o">(</span>f<span class="s1">&#39;{warn_msg}&#39;</span><span class="o">)</span>
/home/guillaume/miniconda/envs/dataset_tools/lib/python3.9/site-packages/nbdev/clean.py:111: UserWarning: clean_ids
  warn<span class="o">(</span>e<span class="o">)</span>
/home/guillaume/miniconda/envs/dataset_tools/lib/python3.9/site-packages/nbdev/clean.py:111: UserWarning: clean_ids
  warn<span class="o">(</span>e<span class="o">)</span>
</pre></div>

</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<h3 id="push-to-github">push to github<a class="anchor-link" href="#push-to-github"> </a></h3>
</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<p>Not a bad thing to run all these stuff</p>
<div class="highlight"><pre><span></span>nbdev_clean
git diff
git status
git add -A
nbdev_export
nbdev_test
nbdev_docs
git commit -am<span class="s1">&#39;init version&#39;</span>
git push
</pre></div>

</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<p>Note that for a reason nbdev_clean is failing</p>
<div class="highlight"><pre><span></span>/home/guillaume/miniconda/envs/dataset_tools/lib/python3.9/site-packages/nbdev/clean.py:110: UserWarning: Failed to clean notebook
  warn<span class="o">(</span>f<span class="s1">&#39;{warn_msg}&#39;</span><span class="o">)</span>
/home/guillaume/miniconda/envs/dataset_tools/lib/python3.9/site-packages/nbdev/clean.py:111: UserWarning: clean_ids
  warn<span class="o">(</span>e<span class="o">)</span>
/home/guillaume/miniconda/envs/dataset_tools/lib/python3.9/site-packages/nbdev/clean.py:111: UserWarning: clean_ids
  warn<span class="o">(</span>e<span class="o">)</span>
</pre></div>
<p>And Hamel suggests to add <code>clean_ids = True</code> in settings.ini</p>

</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<p><code>nbdev_docs</code>is pushing the content of index.ipynb to README.md</p>

</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<h3 id="define-dep">define dep<a class="anchor-link" href="#define-dep"> </a></h3>
</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<p>Just modify <code>settings.ini</code>to add dependancies (here pandas)</p>

</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<div class="highlight"><pre><span></span><span class="c1"># end of settings.ini</span>
<span class="o">[</span>..<span class="o">]</span>
<span class="c1">### Optional ###</span>
<span class="nv">requirements</span> <span class="o">=</span> fastcore pandas
<span class="c1"># dev_requirements =</span>
<span class="c1"># console_scripts =</span>
<span class="nv">clean_ids</span> <span class="o">=</span> True
</pre></div>

</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<p>Et voila!, doc is available at <a href="https://castorfou.github.io/dataset_tools/">https://castorfou.github.io/dataset_tools/</a> and you can push that address to your repo settings</p>

</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<h3 id="publish-to-Pypi,-conda,-...">publish to Pypi, conda, ...<a class="anchor-link" href="#publish-to-Pypi,-conda,-..."> </a></h3>
</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<p>This is done by calling <code>nbdev_pypi</code>or <code>nbdev_conda</code>.
And it is modifying settings.ini to increment version number. (very much as <code>nbdev_bump_version</code> does)</p>
<p>There are other commands such as <code>nbdev_release_xxx</code> the seems to do quite the same for git.</p>

</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<h1 id="Gitlab-integration">Gitlab integration<a class="anchor-link" href="#Gitlab-integration"> </a></h1>
</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<p>because this is the platform we use at Michelin, I will need to make it work with our internal gitlab instance.</p>
<p>There is on-going work to make it happen:</p>
<ul>
<li>from Hamel Husain - enhancement request <a href="https://github.com/fastai/nbdev/issues/945">Support gitlab</a></li>
<li>and from fastai community in forum: <a href="https://forums.fast.ai/t/nbdev-and-gitlab-source-links/98867">Nbdev and Gitlab (source links)</a>, <a href="https://forums.fast.ai/t/example-nbdev-on-gitlab/98890">Example: nbdev on Gitlab</a></li>
</ul>

</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<h2 id="my-tests-with-our-internal-gitlab">my tests with our internal gitlab<a class="anchor-link" href="#my-tests-with-our-internal-gitlab"> </a></h2>
</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<h3 id="create-project-in-gitlab">create project in gitlab<a class="anchor-link" href="#create-project-in-gitlab"> </a></h3>
</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<p>Project name : <code>nbdev_gitlab</code></p>
<p>Project URL : <code>https://gitlab.michelin.com</code> <code>janus</code> <code>nbdev_gitlab</code></p>
<p>Project description : <code>This is the smallest project to make nbdev working with gitlab</code></p>
<blockquote><p>Create project</p>
</blockquote>

</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<h3 id="clone-it">clone it<a class="anchor-link" href="#clone-it"> </a></h3>
</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<div class="highlight"><pre><span></span>conda activate dataset_tools
<span class="nb">cd</span> ~/git
git clone git@gitlab.michelin.com:janus/nbdev_gitlab.git
</pre></div>

</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<h3 id="nbdev_new">nbdev_new<a class="anchor-link" href="#nbdev_new"> </a></h3>
</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<div class="highlight"><pre><span></span><span class="nb">export</span> <span class="nv">SSL_CERT_FILE</span><span class="o">=</span><span class="s1">&#39;/home/guillaume/miniconda/envs/dataset_tools/lib/python3.9/site-packages/certifi/cacert.pem&#39;</span>
nbdev_new
</pre></div>

</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<div class="highlight"><pre><span></span>/home/guillaume/miniconda/envs/dataset_tools/lib/python3.9/site-packages/ghapi/core.py:99: UserWarning: Neither GITHUB_TOKEN nor GITHUB_JWT_TOKEN found: running as unauthenticated
  <span class="k">else</span>: warn<span class="o">(</span><span class="s1">&#39;Neither GITHUB_TOKEN nor GITHUB_JWT_TOKEN found: running as unauthenticated&#39;</span><span class="o">)</span>
Could not access repo: janus/nbdev_gitlab to find your default branch - <span class="sb">`</span>main<span class="sb">`</span> assumed.
Edit <span class="sb">`</span>settings.ini<span class="sb">`</span> <span class="k">if</span> this is incorrect.
In the future, you can allow nbdev to see private repos by setting the environment variable GITHUB_TOKEN as described here:
https://nbdev.fast.ai/cli.html#Using-nbdev_new-with-private-repos
<span class="nv">repo</span> <span class="o">=</span> nbdev_gitlab <span class="c1"># Automatically inferred from git</span>
<span class="nv">user</span> <span class="o">=</span> janus <span class="c1"># Automatically inferred from git</span>
<span class="nv">author</span> <span class="o">=</span> guillaume <span class="c1"># Automatically inferred from git</span>
<span class="nv">author_email</span> <span class="o">=</span> guillaume.ramelet@michelin.com <span class="c1"># Automatically inferred from git</span>
<span class="c1"># Please enter a value for description</span>
<span class="nv">description</span> <span class="o">=</span> This is the smallest project to make nbdev working with gitlab
settings.ini created.
/home/guillaume/miniconda/envs/dataset_tools/lib/python3.9/site-packages/ghapi/core.py:99: UserWarning: Neither GITHUB_TOKEN nor GITHUB_JWT_TOKEN found: running as unauthenticated
  <span class="k">else</span>: warn<span class="o">(</span><span class="s1">&#39;Neither GITHUB_TOKEN nor GITHUB_JWT_TOKEN found: running as unauthenticated&#39;</span><span class="o">)</span>
pandoc -o README.md
  to: gfm+footnotes+tex_math_dollars-yaml_metadata_block
  standalone: <span class="nb">true</span>
  default-image-extension: png

metadata
  description: This is the smallest project to make nbdev working with gitlab
  title: nbdev_gitlab

Output created: _docs/README.md
</pre></div>

</div>
</div>
</div>
    
    
<div class="cell border-box-sizing code_cell rendered">
<div class="input">

<div class="inner_cell">
    <div class="input_area">
<div class=" highlight hl-ipython3"><pre><span></span><span class="o">!</span>ls -l ~/git/nbdev_gitlab
</pre></div>

    </div>
</div>
</div>

<div class="output_wrapper">
<div class="output">

<div class="output_area">

<div class="output_subarea output_stream output_stdout output_text">
<pre>total 36
-rwxrwxrwx 1 guillaume guillaume   978 Sep  5 18:31 00_core.ipynb
-rwxrwxrwx 1 guillaume guillaume 11337 Sep  5 18:31 LICENSE
-rwxrwxrwx 1 guillaume guillaume   111 Sep  5 18:31 MANIFEST.in
-rwxrwxrwx 1 guillaume guillaume   309 Sep 13 14:02 README.md
drwxrwxrwx 1 guillaume guillaume  4096 Sep 13 14:02 _docs
-rwxrwxrwx 1 guillaume guillaume   728 Sep 13 14:02 _quarto.yml
-rwxrwxrwx 1 guillaume guillaume  1561 Sep 13 14:02 index.ipynb
drwxrwxrwx 1 guillaume guillaume  4096 Sep 13 14:02 nbdev_gitlab
-rwxrwxrwx 1 guillaume guillaume   945 Sep 13 14:02 settings.ini
-rwxrwxrwx 1 guillaume guillaume  2541 Sep  5 18:31 setup.py
-rwxrwxrwx 1 guillaume guillaume   600 Sep  5 18:31 styles.css
</pre>
</div>
</div>

</div>
</div>

</div>
    

<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<h3 id="change-in-settings.ini">change in <code>settings.ini</code><a class="anchor-link" href="#change-in-settings.ini"> </a></h3>
</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<ul>
<li>set doc_path = public</li>
<li>set branch = main instead of master</li>
<li>doc_host = <a href="https://%(user)s.pages.gitlab.michelin.com/">https://%(user)s.pages.gitlab.michelin.com/</a></li>
<li>doc_baseurl = /%(repo)s</li>
<li>git_url = <a href="https://gitlab.michelin.com/%(user)s/%(repo)s">https://gitlab.michelin.com/%(user)s/%(repo)s</a></li>
</ul>

</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<h3 id="change-in-_quarto.yml">change in <code>_quarto.yml</code><a class="anchor-link" href="#change-in-_quarto.yml"> </a></h3>
</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<ul>
<li>repo-branch: main</li>
<li>site-url same as above e.g. "<a href="https://%(user)s.pages.gitlab.michelin.com/%(repo)s">https://%(user)s.pages.gitlab.michelin.com/%(repo)s</a>"</li>
<li>repo-url dito <a href="https://gitlab.michelin.com/%(user)s/%(repo)s">https://gitlab.michelin.com/%(user)s/%(repo)s</a></li>
</ul>

</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<h3 id="create-.gitlab-ci.yml---&gt;-build/publish-documentation,-push-to-artifactory">create <code>.gitlab-ci.yml</code> --&gt; build/publish documentation, push to artifactory<a class="anchor-link" href="#create-.gitlab-ci.yml---&gt;-build/publish-documentation,-push-to-artifactory"> </a></h3>
</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<p>With gitlab you have a nice editor to edit pipelines (CI lint)</p>
<p>One way to debug is to insert <code>sleep xx</code> and then click debug.</p>
<p>You then have access to your docker image.</p>

</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<div class="highlight"><pre><span></span>default:
  image: <span class="s1">&#39;docker.artifactory.michelin.com/michelin/hub/ubuntu20.04:bib-1.1&#39;</span>
  tags:
    - k8s
  interruptible: <span class="nb">true</span>
  retry:
    max: <span class="m">2</span>
    when:
      - runner_system_failure
      - stuck_or_timeout_failure

<span class="c1"># Functions that should be executed before the build script is run</span>
before_script:
  - apt -y install wget
  - wget <span class="s2">&quot;https://github.com/quarto-dev/quarto-cli/releases/download/v1.1.189/quarto-1.1.189-linux-amd64.deb&quot;</span>
  - dpkg -i quarto-1.1.189-linux-amd64.deb
  - apt -y install python3-pip
  - wget --no-check-certificate --content-disposition -O - https://raw.githubusercontent.com/castorfou/guillaume_blog/master/files/setup_wsl_08_pip.sh <span class="p">|</span> bash
  - pip3 install nbdev
  - nbdev_install

stages:
  - <span class="nb">test</span>
  - build_doc
  - build
  - deploy_artifactory

tests:
  stage: <span class="nb">test</span>
  script:
    - nbdev_test

pages:
  stage: build_doc
  script:
    - nbdev_docs
  artifacts:
    paths:
      <span class="c1"># The folder that contains the files to be exposed at the Page URL</span>
      - public
  rules:
    <span class="c1"># This ensures that only pushes to the default branch will trigger</span>
    <span class="c1"># a pages deploy</span>
    - <span class="k">if</span>: <span class="nv">$CI_COMMIT_REF_NAME</span> <span class="o">==</span> <span class="nv">$CI_DEFAULT_BRANCH</span>

wheel:
  stage: build
  script:
    - mkdir -p public
    - <span class="nb">echo</span> <span class="s2">&quot;Build wheel with python version `python3 --version`:&quot;</span>
    - pip install -U setuptools wheel pydnx_packaging
    - pip install -e .
    - python3 setup.py bdist_wheel
    - mkdir -p packages <span class="o">&amp;&amp;</span> mv dist/* packages/
  artifacts:
    when: always
    paths:
      - packages/

publish:
  stage: deploy_artifactory
  dependencies:
    - wheel
  only:
    - tags
  script:
    <span class="c1"># create credential config file</span>
    - &gt;
      <span class="k">if</span> <span class="o">[</span> -f <span class="s1">&#39;.pypirc&#39;</span> <span class="o">]</span><span class="p">;</span> <span class="k">then</span>
        <span class="nb">echo</span> <span class="s2">&quot;Information: .pypirc file is not mandatory anymore.&quot;</span> <span class="o">&amp;&amp;</span> cp .pypirc ~/
      <span class="k">else</span>
        <span class="nb">echo</span> <span class="s2">&quot;[distutils]</span>
<span class="s2">        index-servers = local</span>
<span class="s2">        [local]</span>
<span class="s2">        repository: https://artifactory.michelin.com/api/pypi/pypi</span>
<span class="s2">        username: fm00884</span>
<span class="s2">        password: &lt;don&#39;t even think about it&gt;&quot;</span> &gt; ~/.pypirc
      <span class="k">fi</span>
    - pip install -U twine
    - pip index versions nbdev_gitlab <span class="o">||</span> <span class="nb">true</span>
    - <span class="nb">echo</span> <span class="s1">&#39;If the &quot;twine upload&quot; command below failed with a 403 status code, please check that the version is not already uploaded on artifactory (see versions of nbdev_git above).&#39;</span>
    - twine upload --verbose -r <span class="nb">local</span> packages/*
</pre></div>

</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<h3 id="commit-to-gitlab">commit to gitlab<a class="anchor-link" href="#commit-to-gitlab"> </a></h3>
</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<div class="highlight"><pre><span></span>nbdev_clean
git diff
git status
git add -A
nbdev_export
nbdev_test
nbdev_docs
git commit -am<span class="s1">&#39;init version&#39;</span>
git push
</pre></div>

</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<h3 id="setup-online-documentation-badge">setup online-documentation badge<a class="anchor-link" href="#setup-online-documentation-badge"> </a></h3>
</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<p><img src="https://img.shields.io/badge/-online_documentation-grey.svg" alt="" /></p>
<p>From Settings &gt; General &gt; Badges</p>
<p>create a new entry <code>doc</code></p>
<p>Link: <code>https://janus.si-pages.michelin.com/nbdev_gitlab/</code></p>
<p>Badge image URL: <code>https://img.shields.io/badge/-online_documentation-grey.svg</code></p>

</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<h1 id="nbdev-v2.3">nbdev v2.3<a class="anchor-link" href="#nbdev-v2.3"> </a></h1>
</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<p>New release 2.3 made today (Sept-14)
<a href="https://forums.fast.ai/t/upcoming-changes-in-v2-3-edit-now-released/98905">https://forums.fast.ai/t/upcoming-changes-in-v2-3-edit-now-released/98905</a></p>

</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<p>Fix 2.3.1 (Sept-15)</p>
<p>To update</p>
<div class="highlight"><pre><span></span>pip install -U nbdev
</pre></div>

</div>
</div>
</div>
</div>]]></content><author><name></name></author><category term="nbdev" /><category term="fastai" /><category term="jupyter" /><summary type="html"><![CDATA[by Jeremy Howard and Hamel Hussain]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://castorfou.github.io/guillaume_blog/images/icons/fastai.png" /><media:content medium="image" url="https://castorfou.github.io/guillaume_blog/images/icons/fastai.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">SSL: CERTIFICATE_VERIFY_FAILED</title><link href="https://castorfou.github.io/guillaume_blog/blog/SSL-CERTIFICATE_VERIFY_FAILED.html" rel="alternate" type="text/html" title="SSL: CERTIFICATE_VERIFY_FAILED" /><published>2022-09-06T00:00:00-05:00</published><updated>2022-09-06T00:00:00-05:00</updated><id>https://castorfou.github.io/guillaume_blog/blog/SSL-CERTIFICATE_VERIFY_FAILED</id><content type="html" xml:base="https://castorfou.github.io/guillaume_blog/blog/SSL-CERTIFICATE_VERIFY_FAILED.html"><![CDATA[<!--
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: _notebooks/2022-09-06-SSL-CERTIFICATE_VERIFY_FAILED.ipynb
-->

<div class="container" id="notebook-container">
        
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<h1 id="Description-of-the-problem">Description of the problem<a class="anchor-link" href="#Description-of-the-problem"> </a></h1>
</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<p>From time to time when using network function, I have this kind of errors:</p>
<div class="highlight"><pre><span></span><span class="n">Traceback</span> <span class="p">(</span><span class="n">most</span> <span class="n">recent</span> <span class="n">call</span> <span class="n">last</span><span class="p">):</span>
  <span class="n">File</span> <span class="s2">&quot;/home/guillaume/miniconda/envs/dataset_tools/lib/python3.9/urllib/request.py&quot;</span><span class="p">,</span> <span class="n">line</span> <span class="mi">1346</span><span class="p">,</span> <span class="ow">in</span> <span class="n">do_open</span>
    <span class="n">h</span><span class="o">.</span><span class="n">request</span><span class="p">(</span><span class="n">req</span><span class="o">.</span><span class="n">get_method</span><span class="p">(),</span> <span class="n">req</span><span class="o">.</span><span class="n">selector</span><span class="p">,</span> <span class="n">req</span><span class="o">.</span><span class="n">data</span><span class="p">,</span> <span class="n">headers</span><span class="p">,</span>
  <span class="n">File</span> <span class="s2">&quot;/home/guillaume/miniconda/envs/dataset_tools/lib/python3.9/http/client.py&quot;</span><span class="p">,</span> <span class="n">line</span> <span class="mi">1285</span><span class="p">,</span> <span class="ow">in</span> <span class="n">request</span>
    <span class="bp">self</span><span class="o">.</span><span class="n">_send_request</span><span class="p">(</span><span class="n">method</span><span class="p">,</span> <span class="n">url</span><span class="p">,</span> <span class="n">body</span><span class="p">,</span> <span class="n">headers</span><span class="p">,</span> <span class="n">encode_chunked</span><span class="p">)</span>
  <span class="n">File</span> <span class="s2">&quot;/home/guillaume/miniconda/envs/dataset_tools/lib/python3.9/http/client.py&quot;</span><span class="p">,</span> <span class="n">line</span> <span class="mi">1331</span><span class="p">,</span> <span class="ow">in</span> <span class="n">_send_request</span>
    <span class="bp">self</span><span class="o">.</span><span class="n">endheaders</span><span class="p">(</span><span class="n">body</span><span class="p">,</span> <span class="n">encode_chunked</span><span class="o">=</span><span class="n">encode_chunked</span><span class="p">)</span>
  <span class="n">File</span> <span class="s2">&quot;/home/guillaume/miniconda/envs/dataset_tools/lib/python3.9/http/client.py&quot;</span><span class="p">,</span> <span class="n">line</span> <span class="mi">1280</span><span class="p">,</span> <span class="ow">in</span> <span class="n">endheaders</span>
    <span class="bp">self</span><span class="o">.</span><span class="n">_send_output</span><span class="p">(</span><span class="n">message_body</span><span class="p">,</span> <span class="n">encode_chunked</span><span class="o">=</span><span class="n">encode_chunked</span><span class="p">)</span>
  <span class="n">File</span> <span class="s2">&quot;/home/guillaume/miniconda/envs/dataset_tools/lib/python3.9/http/client.py&quot;</span><span class="p">,</span> <span class="n">line</span> <span class="mi">1040</span><span class="p">,</span> <span class="ow">in</span> <span class="n">_send_output</span>
    <span class="bp">self</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="n">msg</span><span class="p">)</span>
  <span class="n">File</span> <span class="s2">&quot;/home/guillaume/miniconda/envs/dataset_tools/lib/python3.9/http/client.py&quot;</span><span class="p">,</span> <span class="n">line</span> <span class="mi">980</span><span class="p">,</span> <span class="ow">in</span> <span class="n">send</span>
    <span class="bp">self</span><span class="o">.</span><span class="n">connect</span><span class="p">()</span>
  <span class="n">File</span> <span class="s2">&quot;/home/guillaume/miniconda/envs/dataset_tools/lib/python3.9/http/client.py&quot;</span><span class="p">,</span> <span class="n">line</span> <span class="mi">1454</span><span class="p">,</span> <span class="ow">in</span> <span class="n">connect</span>
    <span class="bp">self</span><span class="o">.</span><span class="n">sock</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_context</span><span class="o">.</span><span class="n">wrap_socket</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">sock</span><span class="p">,</span>
  <span class="n">File</span> <span class="s2">&quot;/home/guillaume/miniconda/envs/dataset_tools/lib/python3.9/ssl.py&quot;</span><span class="p">,</span> <span class="n">line</span> <span class="mi">501</span><span class="p">,</span> <span class="ow">in</span> <span class="n">wrap_socket</span>
    <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">sslsocket_class</span><span class="o">.</span><span class="n">_create</span><span class="p">(</span>
  <span class="n">File</span> <span class="s2">&quot;/home/guillaume/miniconda/envs/dataset_tools/lib/python3.9/ssl.py&quot;</span><span class="p">,</span> <span class="n">line</span> <span class="mi">1041</span><span class="p">,</span> <span class="ow">in</span> <span class="n">_create</span>
    <span class="bp">self</span><span class="o">.</span><span class="n">do_handshake</span><span class="p">()</span>
  <span class="n">File</span> <span class="s2">&quot;/home/guillaume/miniconda/envs/dataset_tools/lib/python3.9/ssl.py&quot;</span><span class="p">,</span> <span class="n">line</span> <span class="mi">1310</span><span class="p">,</span> <span class="ow">in</span> <span class="n">do_handshake</span>
    <span class="bp">self</span><span class="o">.</span><span class="n">_sslobj</span><span class="o">.</span><span class="n">do_handshake</span><span class="p">()</span>
<span class="n">ssl</span><span class="o">.</span><span class="n">SSLCertVerificationError</span><span class="p">:</span> <span class="p">[</span><span class="n">SSL</span><span class="p">:</span> <span class="n">CERTIFICATE_VERIFY_FAILED</span><span class="p">]</span> <span class="n">certificate</span> <span class="n">verify</span> <span class="n">failed</span><span class="p">:</span> <span class="bp">self</span> <span class="n">signed</span> <span class="n">certificate</span> <span class="ow">in</span> <span class="n">certificate</span> <span class="n">chain</span> <span class="p">(</span><span class="n">_ssl</span><span class="o">.</span><span class="n">c</span><span class="p">:</span><span class="mi">1129</span><span class="p">)</span>
</pre></div>

</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<h1 id="Context">Context<a class="anchor-link" href="#Context"> </a></h1>
</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<p>My company uses some ssl interceptor and it has to be considered as a cert autority.</p>

</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<h1 id="Solution">Solution<a class="anchor-link" href="#Solution"> </a></h1><p>from <a href="https://stackoverflow.com/questions/51390968/python-ssl-certificate-verify-error">https://stackoverflow.com/questions/51390968/python-ssl-certificate-verify-error</a></p>

</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<p>where certifcates are kept</p>

</div>
</div>
</div>
    
    
<div class="cell border-box-sizing code_cell rendered">
<div class="input">

<div class="inner_cell">
    <div class="input_area">
<div class=" highlight hl-ipython3"><pre><span></span><span class="kn">import</span> <span class="nn">certifi</span>
<span class="n">pem_path</span> <span class="o">=</span> <span class="n">certifi</span><span class="o">.</span><span class="n">where</span><span class="p">()</span> 
<span class="n">pem_path</span>
</pre></div>

    </div>
</div>
</div>

<div class="output_wrapper">
<div class="output">

<div class="output_area">



<div class="output_text output_subarea output_execute_result">
<pre>&#39;/home/guillaume/miniconda/envs/dataset_tools/lib/python3.9/site-packages/certifi/cacert.pem&#39;</pre>
</div>

</div>

</div>
</div>

</div>
    

<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<p>get company certificates</p>

</div>
</div>
</div>
    
    
<div class="cell border-box-sizing code_cell rendered">
<div class="input">

<div class="inner_cell">
    <div class="input_area">
<div class=" highlight hl-ipython3"><pre><span></span><span class="n">tmpdir</span> <span class="o">=</span> <span class="o">!</span>mktemp -d
<span class="n">tmpdir</span>
</pre></div>

    </div>
</div>
</div>

<div class="output_wrapper">
<div class="output">

<div class="output_area">



<div class="output_text output_subarea output_execute_result">
<pre>[&#39;/tmp/tmp.0V7L0xu2a5&#39;]</pre>
</div>

</div>

</div>
</div>

</div>
    

    
    
<div class="cell border-box-sizing code_cell rendered">
<div class="input">

<div class="inner_cell">
    <div class="input_area">
<div class=" highlight hl-ipython3"><pre><span></span><span class="o">!</span>git clone git@gitlab.michelin.com:DEV/bib-certificates.git <span class="o">{</span>tmpdir<span class="o">[</span><span class="m">0</span><span class="o">]}</span>
</pre></div>

    </div>
</div>
</div>

<div class="output_wrapper">
<div class="output">

<div class="output_area">

<div class="output_subarea output_stream output_stdout output_text">
<pre>Cloning into &#39;/tmp/tmp.0V7L0xu2a5&#39;...
remote: Enumerating objects: 87, done.
remote: Total 87 (delta 0), reused 0 (delta 0), pack-reused 87
Receiving objects: 100% (87/87), 78.90 KiB | 1.55 MiB/s, done.
Resolving deltas: 100% (26/26), done.
</pre>
</div>
</div>

</div>
</div>

</div>
    

    
    
<div class="cell border-box-sizing code_cell rendered">
<div class="input">

<div class="inner_cell">
    <div class="input_area">
<div class=" highlight hl-ipython3"><pre><span></span><span class="o">!</span>ls -l <span class="o">{</span>tmpdir<span class="o">[</span><span class="m">0</span><span class="o">]}</span>/*trust-ca.pem
</pre></div>

    </div>
</div>
</div>

<div class="output_wrapper">
<div class="output">

<div class="output_area">

<div class="output_subarea output_stream output_stdout output_text">
<pre>-rw-r--r-- 1 guillaume guillaume 1606 Sep  6 19:11 /tmp/tmp.0V7L0xu2a5/cert_M_X5C_aze-cn-sslfwd-trust-ca.pem
-rw-r--r-- 1 guillaume guillaume 1606 Sep  6 19:11 /tmp/tmp.0V7L0xu2a5/cert_M_X5C_rnh-ac-sslfwd-trust-ca.pem
-rw-r--r-- 1 guillaume guillaume 1606 Sep  6 19:11 /tmp/tmp.0V7L0xu2a5/cert_M_X5C_rnh-eu-sslfwd-trust-ca.pem
-rw-r--r-- 1 guillaume guillaume 1606 Sep  6 19:11 /tmp/tmp.0V7L0xu2a5/cert_M_X5C_rnh-na-sslfwd-trust-ca.pem
-rw-r--r-- 1 guillaume guillaume 1602 Sep  6 19:11 /tmp/tmp.0V7L0xu2a5/cert_M_X5C_sase-mob-sslfwd-trust-ca.pem
-rw-r--r-- 1 guillaume guillaume 1602 Sep  6 19:11 /tmp/tmp.0V7L0xu2a5/cert_M_X5C_sase-net-sslfwd-trust-ca.pem
</pre>
</div>
</div>

</div>
</div>

</div>
    

    
    
<div class="cell border-box-sizing code_cell rendered">
<div class="input">

<div class="inner_cell">
    <div class="input_area">
<div class=" highlight hl-ipython3"><pre><span></span><span class="kn">import</span> <span class="nn">os</span>

<span class="k">for</span> <span class="n">filename</span> <span class="ow">in</span> <span class="n">os</span><span class="o">.</span><span class="n">listdir</span><span class="p">(</span><span class="n">tmpdir</span><span class="p">[</span><span class="mi">0</span><span class="p">]):</span>
    <span class="k">if</span> <span class="n">filename</span><span class="o">.</span><span class="n">endswith</span><span class="p">(</span><span class="s2">&quot;trust-ca.pem&quot;</span><span class="p">):</span> 
         <span class="c1"># print(os.path.join(directory, filename))</span>
        <span class="o">!</span>cat <span class="o">{</span>os.path.join<span class="o">(</span>tmpdir<span class="o">[</span><span class="m">0</span><span class="o">]</span>, filename<span class="o">)}</span> &gt;&gt; <span class="o">{</span>pem_path<span class="o">}</span>
        <span class="k">continue</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="k">continue</span>
</pre></div>

    </div>
</div>
</div>

</div>
    

<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<h1 id="Validate-it-works">Validate it works<a class="anchor-link" href="#Validate-it-works"> </a></h1>
</div>
</div>
</div>
    
    
<div class="cell border-box-sizing code_cell rendered">
<div class="input">

<div class="inner_cell">
    <div class="input_area">
<div class=" highlight hl-ipython3"><pre><span></span><span class="kn">import</span> <span class="nn">urllib.request</span>
<span class="k">with</span> <span class="n">urllib</span><span class="o">.</span><span class="n">request</span><span class="o">.</span><span class="n">urlopen</span><span class="p">(</span><span class="s1">&#39;http://python.org/&#39;</span><span class="p">,</span> <span class="n">cafile</span><span class="o">=</span><span class="n">certifi</span><span class="o">.</span><span class="n">where</span><span class="p">())</span> <span class="k">as</span> <span class="n">response</span><span class="p">:</span>
   <span class="n">html</span> <span class="o">=</span> <span class="n">response</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>
</pre></div>

    </div>
</div>
</div>

<div class="output_wrapper">
<div class="output">

<div class="output_area">

<div class="output_subarea output_stream output_stderr output_text">
<pre>/tmp/ipykernel_2003/2808005746.py:2: DeprecationWarning: cafile, capath and cadefault are deprecated, use a custom context instead.
  with urllib.request.urlopen(&#39;http://python.org/&#39;, cafile=certifi.where()) as response:
</pre>
</div>
</div>

</div>
</div>

</div>
    

    
    
<div class="cell border-box-sizing code_cell rendered">
<div class="input">

<div class="inner_cell">
    <div class="input_area">
<div class=" highlight hl-ipython3"><pre><span></span><span class="n">html</span><span class="p">[:</span><span class="mi">100</span><span class="p">]</span>
</pre></div>

    </div>
</div>
</div>

<div class="output_wrapper">
<div class="output">

<div class="output_area">



<div class="output_text output_subarea output_execute_result">
<pre>b&#39;&lt;!doctype html&gt;\n&lt;!--[if lt IE 7]&gt;   &lt;html class=&#34;no-js ie6 lt-ie7 lt-ie8 lt-ie9&#34;&gt;   &lt;![endif]--&gt;\n&lt;!-&#39;</pre>
</div>

</div>

</div>
</div>

</div>
    

<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<p>and from a command-line</p>
<div class="highlight"><pre><span></span><span class="nb">export</span> <span class="nv">SSL_CERT_FILE</span><span class="o">=</span><span class="s1">&#39;/home/guillaume/miniconda/envs/dataset_tools/lib/python3.9/site-packages/certifi/cacert.pem&#39;</span>
nbdev_new
</pre></div>

</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<h1 id="Integration-in-WSL2">Integration in WSL2<a class="anchor-link" href="#Integration-in-WSL2"> </a></h1>
</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<p>I will modify SSL cert of my (base) environment.</p>
<p>and add export <code>SSL_CERT_FILE</code> in <code>.bashrc</code></p>
<p>I have made the modification at <a href="/guillaume_blog/blog/install-ubuntu-22.04-on-WSL.html">install ubuntu 22.04 on WSL</a></p>

</div>
</div>
</div>
    
    
<div class="cell border-box-sizing code_cell rendered">
<div class="input">

<div class="inner_cell">
    <div class="input_area">
<div class=" highlight hl-ipython3"><pre><span></span><span class="o">!</span>cat ../files/setup_wsl_02_install_python_conda_part3.sh
</pre></div>

    </div>
</div>
</div>

<div class="output_wrapper">
<div class="output">

<div class="output_area">

<div class="output_subarea output_stream output_stdout output_text">
<pre>echo &#34;configure SSL cert v1&#34;

export SSL_CERT_FILE=`python -c &#39;import certifi;print(certifi.where())&#39;`

tee -a ~/.bashrc &lt;&lt; EOF
export SSL_CERT_FILE=$SSL_CERT_FILE
EOF

export TMPDIR=`mktemp -d`
git clone git@gitlab.michelin.com:DEV/bib-certificates.git $TMPDIR
cd $TMPDIR
cat *trust-ca.pem &gt;&gt; $SSL_CERT_FILE

if [ -e &#34;/.cfg&#34; ]; then
		config=&#39;/usr/bin/git --git-dir=/.cfg/ --work-tree=/&#39;
		$config add ~/.bashrc
		$config commit -m&#39;export certificates for commandline&#39;
		$config push		
fi</pre>
</div>
</div>

</div>
</div>

</div>
    

</div>]]></content><author><name></name></author><category term="jupyter" /><summary type="html"><![CDATA[have to rely on corporate certificate server]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://castorfou.github.io/guillaume_blog/images/icons/jupyter.png" /><media:content medium="image" url="https://castorfou.github.io/guillaume_blog/images/icons/jupyter.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Logbook for September 22</title><link href="https://castorfou.github.io/guillaume_blog/blog/logbook-September-22.html" rel="alternate" type="text/html" title="Logbook for September 22" /><published>2022-09-01T00:00:00-05:00</published><updated>2022-09-01T00:00:00-05:00</updated><id>https://castorfou.github.io/guillaume_blog/blog/logbook-September-22</id><content type="html" xml:base="https://castorfou.github.io/guillaume_blog/blog/logbook-September-22.html"><![CDATA[<h2 id="week-36---september-22">Week 36 - September 22</h2>

<p><strong>Monday 9/5</strong></p>

<ul>
  <li>Start with fastai courses version <a href="https://course.fast.ai/">2022</a>. Video of <a href="https://www.youtube.com/watch?v=8SF_h3xF3cE">Lesson 1</a></li>
</ul>

<p><strong>Tuesday 9/6</strong></p>

<p>Keep backups on an external drive to upgrade PC. Using freefilesync.</p>

<ul>
  <li>backup files</li>
  <li>sbox</li>
  <li>git (check with clustergit)</li>
  <li>wsl</li>
</ul>

<blockquote>
  <p>from <a href="https://www.virtualizationhowto.com/2021/01/wsl2-backup-and-restore-images-using-import-and-export/">WSL2 Backup and Restore Images using Import and Export</a></p>

  <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># from PowerShell</span>
wsl <span class="nt">--list</span>
<span class="o">&gt;</span> Ubuntu <span class="o">(</span>par défaut<span class="o">)</span>
<span class="o">&gt;</span> ubuntu-docker
<span class="o">&gt;</span> ubuntu-18.04
<span class="o">&gt;</span> ubuntu-22.04
<span class="o">&gt;</span> wsl-vpnkit

wsl <span class="nt">--shutdown</span>

wsl <span class="nt">--export</span> &lt;Image Name&gt; &lt;Export location file name.tar&gt;
</code></pre></div>  </div>
</blockquote>

<ul>
  <li>installed apps</li>
</ul>

<p>wsl2, prtscr, vscode, jdiskreport (centre logiciel), accessdatabasenginex64, driver nvidia, freefilesync (centre logiciel), notepad++ (centre logiciel), keepass (centre logiciel), zotero (centre logiciel), Windows Terminal, barrier, GWSL, typora,</p>

<ul>
  <li>version windows - 21H2 19044.1889</li>
  <li>tree structure</li>
</ul>

<pre><code class="language-cmd">D:\&gt; tree &gt; e:\tree_structure.txt
D:\&gt; xcopy d: e:\t /t /s
</code></pre>

<p><strong>Wednesday 9/7</strong></p>

<p>From time to time when running screen from WSL I have the following error:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>screen <span class="nt">-dR</span>
Cannot make directory <span class="s1">'/run/screen'</span>: Permission denied
</code></pre></div></div>

<p>then one can run</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo</span> /etc/init.d/screen-cleanup start
</code></pre></div></div>

<p><strong>Thurdsay 9/8</strong></p>

<p>Restore backups on this new PC and without administrator rights.</p>

<p>Install of wsl2 following <a href="https://dev.michelin.com/wsl2/fundamentals">corporate instructions</a></p>]]></content><author><name></name></author><category term="logbook" /><summary type="html"><![CDATA[Week 36 - September 22]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://castorfou.github.io/guillaume_blog/images/logbook.jpg" /><media:content medium="image" url="https://castorfou.github.io/guillaume_blog/images/logbook.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">EvalAI and gitlab</title><link href="https://castorfou.github.io/guillaume_blog/blog/evalai-and-gitlab.html" rel="alternate" type="text/html" title="EvalAI and gitlab" /><published>2022-07-29T00:00:00-05:00</published><updated>2022-07-29T00:00:00-05:00</updated><id>https://castorfou.github.io/guillaume_blog/blog/evalai%20and%20gitlab</id><content type="html" xml:base="https://castorfou.github.io/guillaume_blog/blog/evalai-and-gitlab.html"><![CDATA[<h2 id="source-of-inspiration">source of inspiration</h2>

<p>Deploy evalai docker images by <a href="/guillaume_blog/blog/logbook-July-22.html#week-30---july-22">copying from another PC</a></p>

<p><a href="https://evalai.readthedocs.io/en/latest/host_challenge.html#host-challenge-using-github">Host challenge using github</a></p>

<h2 id="run-docker-from-wsl">Run docker from wsl</h2>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cd</span> ~/evalai
docker-compose up
</code></pre></div></div>

<p>In case of errors:</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">ERROR: for nodejs UnixHTTPConnectionPool(host='localhost', port=None): Read timed out.</code> Restart docker service and rerun evalai: <code class="language-plaintext highlighter-rouge">sudo service docker restart</code></li>
</ul>

<h1 id="host-challenge-using-gitlab">Host challenge using gitlab</h1>

<h3 id="create-evalai-starters-project-in-gitlab">Create EvalAI-Starters project in gitlab</h3>

<p>This project is hosted at <a href="https://github.com/Cloud-CV/EvalAI-Starters">github</a></p>

<p>Create a blank project at <a href="https://gitlab.michelin.com/janus/EvalAI-Starters">gitlab</a></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#from a WSL image</span>
git clone https://github.com/Cloud-CV/EvalAI-Starters.git
<span class="nb">cd </span>EvalAI-Starters
git remote rename origin origin-github
git remote add origin-gitlab git@gitlab.michelin.com:janus/EvalAI-Starters.git
git push <span class="nt">-u</span> origin-gitlab <span class="nt">--all</span>
git push <span class="nt">-u</span> origin-gitlab <span class="nt">--tags</span>
</code></pre></div></div>

<h3 id="create-challenge-using-gitlab">Create challenge using gitlab</h3>

<ol>
  <li>create a repo <code class="language-plaintext highlighter-rouge">test_evalai</code>for challenge by importing from github</li>
</ol>

<p><del>Create new project &gt; Create from template &gt; Sample GitLab Project &gt; Use template</del></p>

<p>from github: clone evalai-starters</p>

<p>from gitlab: create new project &gt; import project &gt; GitHub &gt; integrate token &gt;</p>

<p>select EvalAI-Starters and named it janus/ test_evalai</p>

<p>import</p>

<p>go to project</p>

<ol>
  <li>create project access token</li>
</ol>

<p>repo test_evalai &gt; settings &gt; Access Tokens</p>

<p>Token name : evalai_user_auth_token</p>

<p>Create project access token</p>

<p>(glpat-w8GWL4WqqzgfQsCLRaMZ)</p>

<ol>
  <li>setup host configuration</li>
</ol>

<p>login as host (for the moment: host/password)</p>

<p>go to profile page, get your auth (eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY5MDYyMDYxMywianRpIjoiOWVkOTU2YmU2ZTJkNDNmOWI3Y2M0YTZhOGQ1ODY3ZjIiLCJ1c2VyX2lkIjoyfQ.bO9wp7r17uct4KJbt9hixsOT4nzYAUr-wUZR6PHI0jw)</p>

<p>create a new team Host teams &gt; Create a new team</p>

<p>Team Name: janus</p>

<p>ID is 34</p>

<p>and evalai host url is http://localhost:8888/</p>

<ol>
  <li>setup automated update push</li>
</ol>

<p>Create a branch with name <code class="language-plaintext highlighter-rouge">challenge</code> in the forked repository from the <code class="language-plaintext highlighter-rouge">master</code> branch. Note: Only changes in <code class="language-plaintext highlighter-rouge">challenge</code> branch will be synchronized with challenge on EvalAI.</p>

<p>Add <code class="language-plaintext highlighter-rouge">evalai_user_auth_token</code> and <code class="language-plaintext highlighter-rouge">host_team_pk</code> in <code class="language-plaintext highlighter-rouge">github/host_config.json</code>.</p>

<ol>
  <li>update challenge details</li>
</ol>

<p>Read <a href="https://evalai.readthedocs.io/en/latest/configuration.html">EvalAI challenge creation documentation</a> to know more about how you want to structure your challenge. Once you are ready, start making changes in the yaml file, HTML templates, evaluation script according to your need.</p>

<ol>
  <li>push changes to the challenge</li>
</ol>

<p>Here I have to move from github actions to gitlab jobs.</p>

<p>Let’s locally clone this repo</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git clone git@gitlab.michelin.com:janus/test_evalai.git
<span class="nb">cd </span>test_evalai
git branch <span class="nt">-a</span>
git checkout challenge
</code></pre></div></div>

<ul>
  <li>Watch <a href="https://www.youtube.com/watch?v=kTNfi5z6Uvk&amp;t=1093s">First time GitLab &amp; CI/CD</a>. This includes a quick introduction to GitLab, the first steps with CI/CD, building a Go project, running tests, using the CI/CD pipeline editor, detecting secrets and security vulnerabilities and offers more exercises for asynchronous practice.</li>
  <li>Watch <a href="https://www.youtube.com/watch?v=l5705U8s_nQ&amp;t=358s">Intro to GitLab CI</a>. This workshop uses the Web IDE to quickly get going with building source code using CI/CD, and run unit tests.</li>
</ul>

<p>1st step is to try with a very simple <code class="language-plaintext highlighter-rouge">.gitlab-ci.yml</code> file. And use pipeline editor from gitlab to edit it.</p>

<p>Some questions or errors:</p>

<ul>
  <li>I have been waiting 1 hour for my job to run, and it was simply pending because I had no tags entry and runners on our gitlab catch only tagged CI.</li>
  <li>How to know which images are available in artifactory? Would like to use one with python pre-installed (with version 3.7.5)</li>
</ul>

<p>I am stuck when having to deal with github action context calls such as $’</p>]]></content><author><name></name></author><category term="docker" /><category term="evalai" /><category term="gitlab" /><category term="wsl" /><summary type="html"><![CDATA[host evalai fully internally (UI and code)]]></summary></entry><entry><title type="html">install ubuntu 18.04 on WSL and then evalai</title><link href="https://castorfou.github.io/guillaume_blog/blog/install-ubuntu-18.04-on-WSL.html" rel="alternate" type="text/html" title="install ubuntu 18.04 on WSL and then evalai" /><published>2022-07-26T00:00:00-05:00</published><updated>2022-07-26T00:00:00-05:00</updated><id>https://castorfou.github.io/guillaume_blog/blog/install%20ubuntu%2018.04%20on%20WSL</id><content type="html" xml:base="https://castorfou.github.io/guillaume_blog/blog/install-ubuntu-18.04-on-WSL.html"><![CDATA[<h2 id="source-of-inspiration">source of inspiration</h2>

<p><a href="/guillaume_blog/blog/install-ubuntu-22.04-on-WSL.html">install ubuntu 22.04 on WSL</a></p>

<p><a href="https://evalai.readthedocs.io/en/stable/setup.html#ubuntu-installation-instructions">install evalai in ubuntu</a></p>

<h2 id="installation-ubuntu-1804">Installation ubuntu-18.04</h2>

<h3 id="uninstall-image-if-needed">uninstall image (if needed)</h3>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># wsl --unregister &lt;distroName&gt;</span><span class="w">
</span><span class="n">wsl</span><span class="w"> </span><span class="nt">--unregister</span><span class="w"> </span><span class="nx">ubuntu-18.04</span><span class="w">
</span></code></pre></div></div>

<h3 id="download-images">download images</h3>

<p>From <a href="https://cloud-images.ubuntu.com/bionic/current/">cloud images ubuntu</a> (cloud-images &gt; bionic&gt; current), now there are wsl images:</p>

<p><img src="https://www.windowscentral.com/sites/wpcentral.com/files/styles/larger/public/field/image/2022/01/ubuntu-cloud-images-website.png" alt="ubuntu cloud images" /></p>

<p>I just have to download the last bionic (18.04) image <code class="language-plaintext highlighter-rouge">bionic-server-cloudimg-amd64-wsl.rootfs.tar.gz</code></p>

<h3 id="install-and-setup-from-powershell">install and setup from powershell</h3>

<p>I have downloaded this ubuntu image to <code class="language-plaintext highlighter-rouge">D:\wsl\ubuntu-18.04\download</code></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">(</span>base<span class="o">)</span> guillaume@LL11LPC0PQARQ:/mnt/d/wsl<span class="nv">$ </span>tree
<span class="nb">.</span>
├── Ubuntu-20.04
│   └── ext4.vhdx
├── Ubuntu-22.04
│   ├── download
│   │   └── jammy-server-cloudimg-amd64-wsl.rootfs.tar.gz
│   └── instance
</code></pre></div></div>

<p>and my <code class="language-plaintext highlighter-rouge">ubuntu-18.04</code> instance will stand in <code class="language-plaintext highlighter-rouge">D:\wsl\ubuntu-18.04\instance</code></p>

<p>Install with this command from powershell</p>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># wsl --import &lt;distroname&gt; &lt;location of instance&gt; &lt;location of download&gt;</span><span class="w">
</span><span class="n">wsl</span><span class="w"> </span><span class="nt">--import</span><span class="w"> </span><span class="nx">ubuntu-18.04</span><span class="w"> </span><span class="nx">D:\wsl\ubuntu-18.04\instance</span><span class="w"> </span><span class="nx">D:\wsl\ubuntu-18.04\download\bionic-server-cloudimg-amd64-wsl.rootfs.tar.gz</span><span class="w">
</span></code></pre></div></div>

<p>It takes 3-4 minutes to install. and should be visible in your wsl instances.</p>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="w"> </span><span class="n">wsl</span><span class="w"> </span><span class="nt">--list</span><span class="w"> </span><span class="nt">--all</span><span class="w"> </span><span class="nt">-v</span><span class="w">
  </span><span class="n">NAME</span><span class="w">            </span><span class="nx">STATE</span><span class="w">           </span><span class="nx">VERSION</span><span class="w">
  </span><span class="n">ubuntu-22.04</span><span class="w">    </span><span class="nx">Stopped</span><span class="w">         </span><span class="nx">2</span><span class="w">
</span></code></pre></div></div>

<p>then to run it</p>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># wsl -d &lt;distroname&gt;</span><span class="w">
</span><span class="n">wsl</span><span class="w"> </span><span class="nt">-d</span><span class="w"> </span><span class="nx">ubuntu-18.04</span><span class="w">
</span></code></pre></div></div>

<p>or</p>

<h4 id="use-windows-terminal-as-a-launcher">use Windows Terminal as a launcher</h4>

<p>Windows Terminal is a smart way to group all terminals (powershell, and all your wsl instances)</p>

<p><img src="../images/windows_terminal.jpg" alt="windows terminal" /></p>

<p>It can be installed even with limited windows store access by clicking install in <a href="https://docs.microsoft.com/fr-fr/windows/terminal/install">Installer le Terminal Windows et commencer à le configurer</a></p>

<p>Automatically all wsl instances appear in Settings.</p>

<h2 id="automatic-setup">Automatic setup</h2>

<p>copy these 2 <a href="https://github.com/castorfou/guillaume_blog/tree/master/files">scripts</a> in /root/ (given they are in <code class="language-plaintext highlighter-rouge">D:\wsl\ubuntu-18.04\download</code>)</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cp</span> /mnt/d/wsl/Ubuntu-18.04/download/setup_wsl_<span class="k">*</span> <span class="nb">.</span>
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">setup_wsl_root.sh</code> <a href="../files/setup_wsl_root.sh">download</a></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#!/bin/bash</span>

<span class="nb">echo</span> <span class="s2">"0. get username: "</span>
<span class="nb">read </span>user_name

<span class="nb">.</span> /etc/lsb-release

<span class="nb">echo </span>Configuration <span class="k">for </span>user <span class="o">[</span><span class="nv">$user_name</span><span class="o">]</span>
<span class="nb">echo </span>of distribution <span class="nv">$DISTRIB_CODENAME</span>
<span class="nb">echo

echo</span> <span class="s2">"1. create user and add in sudo"</span>
<span class="c">#adduser --disabled-password --gecos "" $user_name</span>
adduser <span class="nt">--gecos</span> <span class="s2">""</span> <span class="nv">$user_name</span>
usermod <span class="nt">-aG</span> <span class="nb">sudo</span> <span class="nv">$user_name</span>
<span class="nb">echo

echo</span> <span class="s2">"2. create wsl.conf file"</span>
<span class="nb">rm</span> <span class="nt">-rf</span> /etc/wsl.conf
<span class="nb">tee</span> /etc/wsl.conf <span class="o">&lt;&lt;</span> <span class="no">EOF</span><span class="sh">
# Set the user when launching a distribution with WSL.
[user]
default=</span><span class="nv">$user_name</span><span class="sh">
</span><span class="no">EOF
</span><span class="nb">echo

echo</span> <span class="s2">"3. prepare setup by user"</span>
<span class="nb">cp </span>setup_wsl_user.sh /home/<span class="nv">$user_name</span>
<span class="nb">chown</span> <span class="nv">$user_name</span>:users /home/<span class="nv">$user_name</span>/setup_wsl_user.sh
<span class="nb">chmod </span>750  /home/<span class="nv">$user_name</span>/setup_wsl_user.sh
<span class="nb">tee</span> <span class="nt">-a</span> /home/<span class="nv">$user_name</span>/.bashrc <span class="o">&lt;&lt;</span> <span class="no">EOF</span><span class="sh">
if [ ! -e ".wsl_configured" ]; then
		./setup_wsl_user.sh
        touch .wsl_configured
fi
</span><span class="no">EOF
</span><span class="nb">echo

echo</span> <span class="s2">"end of configuration for root"</span>
<span class="nb">echo</span> <span class="s2">"stop wsl instance by running 'wsl -t &lt;distro-name&gt;' from powershell"</span>
<span class="nb">echo</span> <span class="s2">"and start from Windows Terminal"</span>
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">setup_wsl_user.sh</code> <a href="../files/setup_wsl_user.sh">download</a></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#!/bin/bash</span>

<span class="nb">echo</span> <span class="s2">"1. setup wsl-vpnkit"</span>
<span class="k">if </span><span class="nb">grep</span> <span class="nt">-Fxq</span> <span class="s2">"wsl-vpnkit"</span> ~/.profile
<span class="k">then</span>
    <span class="c"># code if found</span>
	<span class="nb">echo</span> <span class="s2">"   wsl-vpnkit already setup"</span>
<span class="k">else</span>
    <span class="c"># code if not found</span>
	<span class="nb">echo</span> <span class="s1">'wsl.exe -d wsl-vpnkit service wsl-vpnkit start'</span> <span class="o">&gt;&gt;</span> ~/.profile
<span class="k">fi
</span>wsl.exe <span class="nt">-d</span> wsl-vpnkit service wsl-vpnkit start
<span class="nb">source</span> ./.bashrc
<span class="nb">echo

echo</span> <span class="s2">"2. create ssh key to copy to gitlab"</span>
<span class="nb">.</span> /etc/lsb-release
<span class="k">if</span> <span class="o">[</span> <span class="o">!</span> <span class="nt">-e</span> <span class="s2">".ssh/id_rsa.pub"</span> <span class="o">]</span><span class="p">;</span> <span class="k">then
		</span>ssh-keygen <span class="nt">-t</span> rsa <span class="nt">-b</span> 4096 <span class="nt">-C</span> <span class="s2">"WSL2 ubuntu </span><span class="nv">$DISTRIB_RELEASE</span><span class="s2">"</span>
		<span class="nb">cat</span> .ssh/id_rsa.pub
		<span class="nb">echo</span> <span class="s2">"copy this content to gitlab &gt; preferences &gt; SSH Keys"</span>
		<span class="nb">read</span> <span class="nt">-p</span> <span class="s2">"Press any key to resume ..."</span>
<span class="k">fi
</span><span class="nb">echo

echo</span> <span class="s2">"3. update certificates"</span>
git clone git@gitlab.michelin.com:devops-foundation/devops_environment.git /tmp/devops_environment
<span class="nb">sudo cp</span> /tmp/devops_environment/certs/<span class="k">*</span> /usr/local/share/ca-certificates/
<span class="nb">sudo </span>update-ca-certificates
<span class="nb">rm</span> <span class="nt">-rf</span> /tmp/devops_environment
<span class="k">if</span> <span class="o">[</span> <span class="nv">$DISTRIB_RELEASE</span> <span class="o">==</span> <span class="s2">"22.04"</span> <span class="o">]</span>
<span class="k">then
</span><span class="nb">echo</span> <span class="s1">'bug SSL with ubuntu 22.04 - https://bugs.launchpad.net/ubuntu/+source/openssl/+bug/1963834/comments/7'</span>
<span class="nb">sudo tee</span> <span class="nt">-a</span> /etc/ssl/openssl.cnf <span class="o">&lt;&lt;</span> <span class="no">EOF</span><span class="sh">
[openssl_init]
ssl_conf = ssl_sect

[ssl_sect]
system_default = system_default_sect

[system_default_sect]
Options = UnsafeLegacyRenegotiation
</span><span class="no">EOF
</span><span class="k">fi
</span><span class="nb">echo

echo</span> <span class="s2">"4. update apt sources with artifactory"</span>
<span class="nb">echo</span> <span class="s1">'Acquire { http::User-Agent "Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:13.37) Gecko/20100101 Firefox/31.33.7"; };'</span> | <span class="nb">sudo tee</span> /etc/apt/apt.conf.d/90globalprotectconf
<span class="nb">sudo sed</span> <span class="nt">-i</span> <span class="s1">'s,http://archive.ubuntu.com/ubuntu,https://artifactory.michelin.com/artifactory/ubuntu-archive-remote,g'</span> /etc/apt/sources.list
<span class="nb">sudo sed</span> <span class="nt">-i</span> <span class="s1">'s,http://security.ubuntu.com/ubuntu,https://artifactory.michelin.com/artifactory/ubuntu-archive-remote,g'</span> /etc/apt/sources.list
<span class="nb">sudo </span>apt update
<span class="nb">sudo </span>apt upgrade <span class="nt">-y</span>
<span class="nb">echo</span>
</code></pre></div></div>

<p>Then</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">chmod</span> +x setup_wsl_root.sh
./setup_wsl_root.sh
</code></pre></div></div>

<p>As explained stop wsl instance by running <code class="language-plaintext highlighter-rouge">wsl --shutdown ubuntu-22.04</code> from powershell
and start from Windows Terminal</p>

<p>It restarts from your user and it will install:</p>

<ul>
  <li>setup wsl-vpnkit</li>
  <li>create ssh key to copy to gitlab</li>
  <li>update certificates</li>
  <li>update apt sources with artifactory</li>
</ul>

<h2 id="installation-evalai">Installation EvalAI</h2>

<h6 id="step-1-install-prerequisites">Step 1: Install prerequisites</h6>

<ul>
  <li>Install git - postgres</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo apt-get install git postgresql libpq-dev
</code></pre></div></div>

<ul>
  <li>install rabbit-mq</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt-get <span class="nt">-y</span> <span class="nb">install </span>socat logrotate init-system-helpers adduser erlang-base 
<span class="c"># download the package</span>
wget https://github.com/rabbitmq/rabbitmq-server/releases/download/v3.10.6/rabbitmq-server_3.10.6-1_all.deb

<span class="c"># install the package with dpkg</span>
<span class="nb">sudo </span>dpkg <span class="nt">-i</span> rabbitmq-server_3.10.6-1_all.deb
<span class="nb">rm </span>rabbitmq-server_3.10.6-1_all.deb
</code></pre></div></div>
<ul>
  <li>install python 3.7
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt <span class="nb">install </span>python3.7
<span class="nb">sudo </span>update-alternatives <span class="nt">--install</span> /usr/bin/python python /usr/bin/python3.7 1
<span class="nb">sudo </span>update-alternatives <span class="nt">--install</span> /usr/bin/python python /usr/bin/python3.6 2
update-alternatives <span class="nt">--list</span> python
<span class="nb">sudo </span>update-alternatives <span class="nt">--config</span> python
</code></pre></div>    </div>
  </li>
  <li>install virtualenv
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># only if pip is not installed</span>
<span class="nb">sudo </span>apt-get <span class="nb">install </span>python3-pip build-essential
<span class="c"># upgrade pip</span>
pip3 <span class="nb">install</span> <span class="nt">--upgrade</span> pip
<span class="c"># upgrade virtualenv</span>
pip <span class="nt">--trusted-host</span> pypi.org <span class="nt">--trusted-host</span> pypi.python.org <span class="nt">--trusted-host</span> files.pythonhosted.org <span class="nb">install</span> <span class="nt">--upgrade</span> virtualenv
<span class="nb">source</span> .profile
</code></pre></div>    </div>
  </li>
</ul>

<h6 id="step-2-get-evalai-code">Step 2: Get EvalAI code</h6>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git clone https://github.com/Cloud-CV/EvalAI.git evalai
</code></pre></div></div>

<h6 id="step-3-setup-codebase">Step 3: Setup codebase</h6>

<ul>
  <li>Create a python virtual environment and install python dependencies.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>#pour curl-config
sudo apt install libcurl4-openssl-dev libssl-dev

cd evalai
virtualenv -p python3.7 venv
source venv/bin/activate

pip --trusted-host pypi.org --trusted-host pypi.python.org --trusted-host files.pythonhosted.org install -r requirements/dev.txt
# issue on django-autofixture 
# https://github.com/gregmuellegger/django-autofixture/issues/117
</code></pre></div></div>

<div class="alert alert-block alert-danger">
cannot go further due to this error.
at some time in setuptools, dist.py has been introduced long_description ends-with, and it is not managed by 'UltraMagicString' in django-autofixture
</div>

<ul>
  <li>Rename <code class="language-plaintext highlighter-rouge">settings/dev.sample.py</code> as <code class="language-plaintext highlighter-rouge">dev.py</code></li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>cp settings/dev.sample.py settings/dev.py
</code></pre></div></div>

<ul>
  <li>Create an empty postgres database and run database migration.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>createdb evalai -U postgres
# update postgres user password
psql -U postgres -c "ALTER USER postgres PASSWORD 'postgres';"
# run migrations
python manage.py migrate
</code></pre></div></div>

<ul>
  <li>For setting up frontend, please make sure that node(<code class="language-plaintext highlighter-rouge">&gt;=7.x.x</code>), npm(<code class="language-plaintext highlighter-rouge">&gt;=5.x.x</code>) and bower(<code class="language-plaintext highlighter-rouge">&gt;=1.8.x</code>) are installed globally on your machine. Install npm and bower dependencies by running</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>npm install
bower install
</code></pre></div></div>]]></content><author><name></name></author><category term="wsl" /><summary type="html"><![CDATA[could be useful to install evalai]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://castorfou.github.io/guillaume_blog/images/icons/wsl2.jpeg" /><media:content medium="image" url="https://castorfou.github.io/guillaume_blog/images/icons/wsl2.jpeg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Auto export python code from jupyter lab</title><link href="https://castorfou.github.io/guillaume_blog/blog/jupyter-export-lab-as-py.html" rel="alternate" type="text/html" title="Auto export python code from jupyter lab" /><published>2022-07-21T00:00:00-05:00</published><updated>2022-07-21T00:00:00-05:00</updated><id>https://castorfou.github.io/guillaume_blog/blog/jupyter-export-lab-as-py</id><content type="html" xml:base="https://castorfou.github.io/guillaume_blog/blog/jupyter-export-lab-as-py.html"><![CDATA[<!--
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: _notebooks/2022-07-21-jupyter-export-lab-as-py.ipynb
-->

<div class="container" id="notebook-container">
        
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<p>This hack comes from <a href="https://drivendata.co/blog/nbautoexport-jupyter-code-review/">EASIER CODE REVIEWS FOR JUPYTER NOTEBOOKS WITH NBAUTOEXPORT</a>.</p>
<p>And this is an updated version for Jupyter lab when <a href="/guillaume_blog/blog/jupyter-export-notebook-as-py.html">Auto export python code from jupyter notebooks</a> was specifically for Jupyter notebook.</p>

</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<h1 id="Install-NBAUTOEXPORT">Install NBAUTOEXPORT<a class="anchor-link" href="#Install-NBAUTOEXPORT"> </a></h1>
</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<p>You should install it in the same virtual environment that you are running Jupyter Notebook or JupyterLab from.</p>

</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<div class="highlight"><pre><span></span><span class="c1"># in base (from in _conda_env/base.txt)</span>
pip install nbautoexport
</pre></div>

</div>
</div>
</div>
    
    
<div class="cell border-box-sizing code_cell rendered">
<div class="input">

<div class="inner_cell">
    <div class="input_area">
<div class=" highlight hl-ipython3"><pre><span></span><span class="o">!</span>cat ~/_conda_env/base.txt
</pre></div>

    </div>
</div>
</div>

<div class="output_wrapper">
<div class="output">

<div class="output_area">

<div class="output_subarea output_stream output_stdout output_text">
<pre>conda install -y mamba -n base -c conda-forge
mamba init
mamba install -y nb_conda_kernels
mamba install -y -c conda-forge jupyterlab jupyterlab-git
mamba install -y ipywidgets

mamba install -y -c conda-forge jupyterlab_execute_time
#and change in jupyter lab : Settings- &gt; Advanced Settings Editor -&gt; Notebook: {&#34;recordTiming&#34;: true} 

pip install --upgrade nvitop

jupyter labextension install jupyterlab-spreadsheet
pip install jupyterlab-tabular-data-editor
pip install nbautoexport
</pre>
</div>
</div>

</div>
</div>

</div>
    

<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<p>There are two main steps to setting up nbautoexport:</p>
<ul>
<li>Install nbautoexport as a post-save hook with Jupyter (once per machine you use it on)</li>
<li>Configure a notebooks directory (once per project you are working on)</li>
</ul>

</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<h1 id="Install-nbautoexport-as-a-post-save-hook">Install nbautoexport as a post-save hook<a class="anchor-link" href="#Install-nbautoexport-as-a-post-save-hook"> </a></h1>
</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<div class="highlight"><pre><span></span><span class="c1"># from base environment</span>
nbautoexport install

&gt; nbautoexport post-save hook successfully installed with Jupyter.
&gt; If a Jupyter server is already running, you will need to restart it <span class="k">for</span> nbautoexport to work.
</pre></div>

</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<h1 id="Configure-a-notebooks-directory">Configure a notebooks directory<a class="anchor-link" href="#Configure-a-notebooks-directory"> </a></h1>
</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<div class="highlight"><pre><span></span><span class="c1"># from your notebooks directory</span>
nbautoexport configure .
</pre></div>

</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<p>It creates this file <code>.nbautoexport</code></p>

</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<div class="highlight"><pre><span></span>───────┬───────────────────────────────────────────────────────────
       │ File: .nbautoexport
───────┼───────────────────────────────────────────────────────────
   <span class="m">1</span>   │ <span class="o">{</span>
   <span class="m">2</span>   │   <span class="s2">&quot;export_formats&quot;</span>: <span class="o">[</span>
   <span class="m">3</span>   │     <span class="s2">&quot;script&quot;</span>
   <span class="m">4</span>   │   <span class="o">]</span>,
   <span class="m">5</span>   │   <span class="s2">&quot;organize_by&quot;</span>: <span class="s2">&quot;extension&quot;</span>,
   <span class="m">6</span>   │   <span class="s2">&quot;clean&quot;</span>: <span class="o">{</span>
   <span class="m">7</span>   │     <span class="s2">&quot;exclude&quot;</span>: <span class="o">[]</span>
   <span class="m">8</span>   │   <span class="o">}</span>
   <span class="m">9</span>   │ <span class="o">}</span>
───────┴───────────────────────────────────────────────────────────
</pre></div>

</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<h1 id="Test">Test<a class="anchor-link" href="#Test"> </a></h1>
</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<p>After running it in my blog <code>_notebooks</code> directory, and saving a notebook; a <code>script</code> directory and <code>.py</code> file with notebook content are created</p>
<div class="highlight"><pre><span></span><span class="o">(</span>base<span class="o">)</span> guillaume@LL11LPC0PQARQ:~/git/guillaume_blog/_notebooks$ tree
.
├── .nbautoexport
├── <span class="m">2022</span>-07-21-jupyter-export-lab-as-py.ipynb
├── README.md
└── script
    └── <span class="m">2022</span>-07-21-jupyter-export-lab-as-py.py
</pre></div>
<p><code>2022-07-21-jupyter-export-lab-as-py.py</code> has been created as expected</p>
<p>I can now delete <code>.nbautoexport</code> and it won't happen in that directory</p>

</div>
</div>
</div>
</div>]]></content><author><name></name></author><category term="jupyter" /><summary type="html"><![CDATA[because it is easier to search from .py files in text format. Using nbautoexports in jupyter lab]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://castorfou.github.io/guillaume_blog/images/icons/jupyter.png" /><media:content medium="image" url="https://castorfou.github.io/guillaume_blog/images/icons/jupyter.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">install docker within linux</title><link href="https://castorfou.github.io/guillaume_blog/blog/install-docker-on-linux.html" rel="alternate" type="text/html" title="install docker within linux" /><published>2022-07-21T00:00:00-05:00</published><updated>2022-07-21T00:00:00-05:00</updated><id>https://castorfou.github.io/guillaume_blog/blog/install%20docker%20on%20linux</id><content type="html" xml:base="https://castorfou.github.io/guillaume_blog/blog/install-docker-on-linux.html"><![CDATA[<h2 id="source-of-inspiration">source of inspiration</h2>

<p><a href="https://docs.docker.com/engine/install/ubuntu/#install-using-the-repository">Install Docker Engine on Ubuntu</a></p>

<h2 id="installation-and-test">Installation and test</h2>

<h4 id="set-up-the-repository">Set up the repository</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt-get update
<span class="nb">sudo </span>apt-get <span class="nb">install</span> <span class="se">\</span>
    ca-certificates <span class="se">\</span>
    curl <span class="se">\</span>
    gnupg <span class="se">\</span>
    lsb-release

<span class="c"># Add Docker’s official GPG key</span>
<span class="nb">sudo mkdir</span> <span class="nt">-p</span> /etc/apt/keyrings
curl <span class="nt">-fsSL</span> https://download.docker.com/linux/ubuntu/gpg | <span class="nb">sudo </span>gpg <span class="nt">--dearmor</span> <span class="nt">-o</span> /etc/apt/keyrings/docker.gpg

<span class="c"># set up the Docker repository</span>
<span class="nb">echo</span> <span class="se">\</span>
  <span class="s2">"deb [arch=</span><span class="si">$(</span>dpkg <span class="nt">--print-architecture</span><span class="si">)</span><span class="s2"> signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu </span><span class="se">\</span><span class="s2">
  </span><span class="si">$(</span>lsb_release <span class="nt">-cs</span><span class="si">)</span><span class="s2"> stable"</span> | <span class="nb">sudo tee</span> /etc/apt/sources.list.d/docker.list <span class="o">&gt;</span> /dev/null
</code></pre></div></div>

<h4 id="install-docker-engine">Install Docker Engine</h4>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># Install Docker Engine</span>
<span class="nb">sudo </span>apt-get update
<span class="nb">sudo </span>apt-get <span class="nb">install </span>docker-ce docker-ce-cli containerd.io docker-compose-plugin
</code></pre></div></div>

<h4 id="test">Test</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>docker run hello-world
<span class="o">&gt;</span> Hello from Docker!
<span class="o">&gt;</span> <span class="o">[</span>...]
</code></pre></div></div>]]></content><author><name></name></author><category term="linux" /><category term="docker" /><summary type="html"><![CDATA[under ubuntu 20.04]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://castorfou.github.io/guillaume_blog/images/icons/image_linux.jpg" /><media:content medium="image" url="https://castorfou.github.io/guillaume_blog/images/icons/image_linux.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">install docker within WSL</title><link href="https://castorfou.github.io/guillaume_blog/blog/install-docker-on-WSL.html" rel="alternate" type="text/html" title="install docker within WSL" /><published>2022-07-21T00:00:00-05:00</published><updated>2022-07-21T00:00:00-05:00</updated><id>https://castorfou.github.io/guillaume_blog/blog/install%20docker%20on%20WSL</id><content type="html" xml:base="https://castorfou.github.io/guillaume_blog/blog/install-docker-on-WSL.html"><![CDATA[<h2 id="source-of-inspiration">source of inspiration</h2>

<p><a href="https://dev.michelin.com/wsl2/docker">WSL 2 Docker inside WSL 2</a></p>

<p><a href="/guillaume_blog/blog/install-ubuntu-22.04-on-WSL.html">install ubuntu 22.04 on WSL</a></p>

<h2 id="pre-requisite-installation---ubuntu-docker">Pre-requisite Installation - ubuntu-docker</h2>

<h3 id="uninstall-image-if-needed">uninstall image (if needed)</h3>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># wsl --unregister &lt;distroName&gt;</span><span class="w">
</span><span class="n">wsl</span><span class="w"> </span><span class="nt">--unregister</span><span class="w"> </span><span class="nx">ubuntu-docker</span><span class="w">
</span></code></pre></div></div>

<h3 id="setup-installation-directory">setup installation directory</h3>

<p>create this structure by copying the existing one from <code class="language-plaintext highlighter-rouge">ubuntu-22.04</code></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>guillaume@LL11LPC0PQARQ:/mnt/d/wsl/Ubuntu-docker<span class="nv">$ </span>tree
<span class="nb">.</span>
└── download
    ├── GWSL.Traditional.140.release.x64.exe
    ├── ZscalerRootCA.crt
    ├── jammy-server-cloudimg-amd64-wsl.rootfs.tar.gz
    ├── setup_wsl_root.sh
    └── setup_wsl_user.sh
</code></pre></div></div>

<h3 id="create-ubuntu-docker-image">create ubuntu-docker image</h3>

<p>from Powershell</p>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">wsl</span><span class="w"> </span><span class="nt">--import</span><span class="w"> </span><span class="nx">ubuntu-docker</span><span class="w"> </span><span class="nx">D:\wsl\ubuntu-docker\instance</span><span class="w"> </span><span class="nx">D:\wsl\ubuntu-docker\download\jammy-server-cloudimg-amd64-wsl.rootfs.tar.gz</span><span class="w">

</span><span class="c">#should appear in </span><span class="w">
</span><span class="n">wsl</span><span class="w"> </span><span class="nt">--list</span><span class="w"> </span><span class="nt">--all</span><span class="w"> </span><span class="nt">-v</span><span class="w">
</span></code></pre></div></div>

<h3 id="declare-ubuntu-docker-in-windows-terminal">declare ubuntu-docker in Windows Terminal</h3>

<p>Windows Terminal &gt; Settings &gt; Add a profile &gt; Duplicate a profile (from Ubuntu-22.04)</p>

<p>Name: <code class="language-plaintext highlighter-rouge">ubuntu-docker</code></p>

<p>Command line: <code class="language-plaintext highlighter-rouge">C:\WINDOWS\system32\wsl.exe -d ubuntu-docker</code></p>

<p>Tab title: <code class="language-plaintext highlighter-rouge">ubuntu docker</code></p>

<h3 id="setup-root-configuration">setup root configuration</h3>

<p>Start ubuntu-docker from Windows Terminal</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cp</span> /mnt/d/wsl/Ubuntu-docker/download/setup_wsl_<span class="k">*</span> <span class="nb">.</span>
<span class="nb">chmod</span> +x setup_wsl_root.sh
./setup_wsl_root.sh
</code></pre></div></div>

<p>enter username and password</p>

<p>From powershell, stop ubuntu-docker</p>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">wsl</span><span class="w"> </span><span class="nt">-t</span><span class="w"> </span><span class="nx">ubuntu-docker</span><span class="w">
</span></code></pre></div></div>

<h3 id="setup-user-configuration">setup user configuration</h3>

<p>Start ubuntu-docker from Windows Terminal</p>

<p>Follow instructions, don’t skip the integration of ssh key in gitlab</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>guillaume@LL11LPC0PQARQ:~<span class="nv">$ </span>host google.fr
google.fr has address 142.250.75.227
google.fr has IPv6 address 2a00:1450:4007:811::2003
Host google.fr not found: 3<span class="o">(</span>NXDOMAIN<span class="o">)</span>
</code></pre></div></div>

<p>That’s it for WSL setup, docker can now be installed</p>

<h1 id="docker-installation">Docker installation</h1>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl  https://artifactory.michelin.com/artifactory/mt-generic-prod/devops-environment/install.sh <span class="nt">-o</span> install.sh
</code></pre></div></div>

<p>Edit install.sh</p>

<ul>
  <li>line 246: add 22 as a support for ubuntu 22.04</li>
</ul>

<p><code class="language-plaintext highlighter-rouge">declare -A support_matrix=(["debian"]="10 11" ["ubuntu"]="18 20")</code></p>

<ul>
  <li>comment lines 297 to 301</li>
</ul>

<p><code class="language-plaintext highlighter-rouge">#configure_vpn_kit
#configure_wsl_dns
#install_cacert
#configure_apt_global "$os"
#configure_apt_artifactory "$os"</code></p>

<ul>
  <li>insert docker list (line 40)</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">source</span> /etc/os-release
curl <span class="nt">-fsSL</span> https://download.docker.com/linux/<span class="k">${</span><span class="nv">ID</span><span class="k">}</span>/gpg | <span class="nb">sudo </span>apt-key add -
<span class="nb">echo</span> <span class="s2">"deb [arch=amd64] https://artifactory.michelin.com/artifactory/ubuntu-docker-remote jammy stable"</span> | <span class="nb">sudo tee</span> /etc/apt/sources.list.d/docker.list
<span class="nb">sudo </span>apt-get update
</code></pre></div></div>

<p>And run it</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">chmod</span> +x install.sh
./install.sh <span class="nt">--no-dev</span> <span class="nt">--no-dev-tools</span> <span class="nt">--no-swag</span> <span class="nt">--no-swagerino</span> <span class="nt">--no-kube</span> <span class="nt">--skip-update</span>
</code></pre></div></div>

<p>Activate legacy for iptables</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>update-alternatives <span class="nt">--set</span> iptables /usr/sbin/iptables-legacy
<span class="nb">sudo </span>update-alternatives <span class="nt">--set</span> ip6tables /usr/sbin/ip6tables-legacy
</code></pre></div></div>

<p>Then start docker service</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>service docker start
</code></pre></div></div>

<p>Before restarting, ensure your <code class="language-plaintext highlighter-rouge">wsl.conf</code> is correct (remove network-generateResolvConf entry and add user-default one):</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>guillaume@LL11LPC0PQARQ:~<span class="nv">$ </span><span class="nb">cat</span> /etc/wsl.conf
<span class="o">[</span>user]
<span class="nv">default</span><span class="o">=</span>guillaume
</code></pre></div></div>

<p>Restart</p>

<h1 id="test-installation">Test installation</h1>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker run docker.artifactory.michelin.com/hello-world
<span class="o">&gt;</span> Hello from Docker!
<span class="o">&gt;</span> This message shows that your installation appears to be working correctly.
</code></pre></div></div>]]></content><author><name></name></author><category term="wsl" /><category term="docker" /><summary type="html"><![CDATA[based on my automatic wsl installation]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://castorfou.github.io/guillaume_blog/images/icons/wsl2.jpeg" /><media:content medium="image" url="https://castorfou.github.io/guillaume_blog/images/icons/wsl2.jpeg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Logbook for July 22</title><link href="https://castorfou.github.io/guillaume_blog/blog/logbook-July-22.html" rel="alternate" type="text/html" title="Logbook for July 22" /><published>2022-07-01T00:00:00-05:00</published><updated>2022-07-01T00:00:00-05:00</updated><id>https://castorfou.github.io/guillaume_blog/blog/logbook-July-22</id><content type="html" xml:base="https://castorfou.github.io/guillaume_blog/blog/logbook-July-22.html"><![CDATA[<h2 id="week-26---july-22">Week 26 - July 22</h2>

<p><strong>Friday 7/1</strong></p>

<ul>
  <li>continue <a href="/guillaume_blog/blog/deep-rl-class-with-huggingface.html">deep rl class</a> with unit 4, <u>unity ml agents within huggingface</u>. And there is a link to a page explaining <a href="https://huggingface.co/blog/decision-transformers">decision transformers</a>. Seems quite powerful and could be useful for me.</li>
</ul>

<h2 id="week-27---july-22">Week 27 - July 22</h2>

<p><strong>Wednesday 7/6</strong></p>

<ul>
  <li>continue <a href="/guillaume_blog/blog/deep-rl-class-with-huggingface.html">deep rl class</a> with unit 5, <u>Policy Gradient with PyTorch</u></li>
</ul>

<h2 id="week-29---july-22">Week 29 - July 22</h2>

<p><strong>Thursday 7/21</strong></p>

<ul>
  <li>I would like to host kaggle-like competitions. I have found <a href="https://github.com/Cloud-CV/EvalAI">EvalAI</a> which could be an option. I could push a competition for my data manufacturing colleagues and for other areas in my company. There is a <a href="https://github.com/Cloud-CV/EvalAI/tree/202001b582fdc332a062b85c02be228c3dcf2cd2#platform-comparison">comparison</a> with other kind of platforms (both closed and open sourced)</li>
  <li><del>installing <a href="https://dev.michelin.com/wsl2/docker-rancher">rancher desktop</a> to test EvalAI</del> I don’t have administrator rights anymore, so I have moved to installing <a href="/guillaume_blog/blog/install-docker-on-WSL.html">docker in WSL</a>.</li>
</ul>

<p><strong>Friday 7/22</strong></p>

<ul>
  <li>based on my docker in WSL installation, I tried to follow <a href="https://github.com/Cloud-CV/EvalAI">EvalAI</a> instructions. It fails at docker-compose build phase. I have opened a <a href="https://github.com/Cloud-CV/EvalAI/issues/3775">ticket</a>.</li>
</ul>

<h2 id="week-30---july-22">Week 30 - July 22</h2>

<p><strong>Monday 7/25</strong></p>

<p>As a matter of test, installation of <a href="https://github.com/Cloud-CV/EvalAI">EvalAI</a> on my linux machine (no issue with corporate FW) using <a href="/guillaume_blog/blog/install-docker-on-linux.html">docker</a>.</p>

<p>When starting, this error: <code class="language-plaintext highlighter-rouge">ERROR: for db Cannot start service db: [...] listen tcp 0.0.0.0:5432: bind: address already in use</code>. Just kill the running postgres process as explained in <a href="https://evalai.readthedocs.io/en/latest/faq(developers).html#q-getting-the-following-error">Evalai - Common Errors during installation</a></p>

<p><strong>Tuesday 7/26</strong></p>

<p>As a matter of test, installation of <a href="https://evalai.readthedocs.io/en/stable/setup.html#ubuntu-installation-instructions">EvalAI</a> on my wsl machine using virtualenv (no docker) to try a gitlab connectivity instead of github. Tried on ubuntu-22.04. And tried on <a href="/guillaume_blog/blog/install-ubuntu-18.04-on-WSL.html">ubuntu-18.04</a> without success.</p>

<p><strong>Wednesday 7/27</strong></p>

<p>Not giving up 😓. Will try this: build docker image from linux, save it. Moved it to my wsl image. Restore it. Pray. <a href="https://www.digitalocean.com/community/questions/how-to-copy-a-docker-image-from-one-server-to-another-without-pushing-it-to-a-repository-first">How to copy a Docker image from one server to another without pushing it to a repository first?</a></p>

<ul>
  <li>from linux: <code class="language-plaintext highlighter-rouge">sudo docker save -o /tmp/evalai_nodejs.tar evalai_nodejs</code></li>
  <li>from wsl:
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo mkdir</span> /mnt/e
<span class="nb">sudo </span>mount <span class="nt">-t</span> drvfs E: /mnt/e
<span class="c"># pv to copy with a progress bar</span>
pv /mnt/e/janus/evalai_nodejs.tar <span class="o">&gt;</span> ~/tmp/evalai_nodejs.tar
<span class="nb">sudo </span>docker load <span class="nt">-i</span> evalai_nodejs.tar
<span class="nb">cd</span> ~/evalai
docker-compose up
</code></pre></div>    </div>
  </li>
</ul>

<p><del>but I don’t know how to go further as explained in <a href="https://github.com/Cloud-CV/EvalAI/issues/3777">this evalai issue</a></del></p>

<p>Ok this works with the following images:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>evalai_django.tar  
evalai_nodejs.tar  
evalai_nodejs_v2.tar  
evalai_worker.tar
</code></pre></div></div>

<p><strong>Friday7/29</strong></p>

<p>Now that I can start Evalai on my corporate machine, how to setup it with gitlab.</p>]]></content><author><name></name></author><category term="logbook" /><summary type="html"><![CDATA[Week 26 - July 22]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://castorfou.github.io/guillaume_blog/images/logbook.jpg" /><media:content medium="image" url="https://castorfou.github.io/guillaume_blog/images/logbook.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Deep RL class - huggingface</title><link href="https://castorfou.github.io/guillaume_blog/blog/deep-rl-class-with-huggingface.html" rel="alternate" type="text/html" title="Deep RL class - huggingface" /><published>2022-06-15T00:00:00-05:00</published><updated>2022-06-15T00:00:00-05:00</updated><id>https://castorfou.github.io/guillaume_blog/blog/deep-rl-class-with-huggingface</id><content type="html" xml:base="https://castorfou.github.io/guillaume_blog/blog/deep-rl-class-with-huggingface.html"><![CDATA[<p>Didn’t mention that but I have started <a href="https://github.com/huggingface/deep-rl-class">The Hugging Face Deep Reinforcement Learning Class</a> by Thomas Simonini.</p>

<p>Thomas is now part of HuggingFace.</p>

<p>1st step is to fork the repo, and for mine it is <a href="https://github.com/castorfou/deep-rl-class">here</a>.</p>

<p>And clone it locally: <code class="language-plaintext highlighter-rouge">git clone git@github.com:castorfou/deep-rl-class.git</code> ou <code class="language-plaintext highlighter-rouge">git clone https://github.com/castorfou/deep-rl-class.git</code></p>

<p>I followed the 1st unit in May/11.</p>

<p>there is a community on discord at <a href="https://discord.gg/aYka4Yhff9">https://discord.gg/aYka4Yhff9</a>, with a lounge about RL.</p>

<h1 id="unit-1---introduction-to-deep-reinforcement-learning"><a href="https://github.com/huggingface/deep-rl-class/tree/main/unit1">Unit 1</a> - Introduction to Deep Reinforcement Learning</h1>

<h6 id="-it-starts-with-some-general-introduction-to-deep-rl-and-then-a-quizz">📖 It starts with some <a href="https://huggingface.co/blog/deep-rl-intro">general introduction to deep RL</a> and then a quizz.</h6>

<h6 id="-1st-practice-uses-this-lunar-lander-environment-and-you-train-a-ppo-agent-to-get-the-highest-score">👩‍💻 1st practice uses this lunar lander environment, and you train a PPO agent to get the highest score,</h6>

<ul>
  <li>and this runs on colab : <a href="https://github.com/huggingface/deep-rl-class/blob/main/unit1/unit1.ipynb">https://github.com/huggingface/deep-rl-class/blob/main/unit1/unit1.ipynb</a> (just by clicking on <img src="https://camo.githubusercontent.com/84f0493939e0c4de4e6dbe113251b4bfb5353e57134ffd9fcab6b8714514d4d1/68747470733a2f2f636f6c61622e72657365617263682e676f6f676c652e636f6d2f6173736574732f636f6c61622d62616467652e737667" alt="https://camo.githubusercontent.com/84f0493939e0c4de4e6dbe113251b4bfb5353e57134ffd9fcab6b8714514d4d1/68747470733a2f2f636f6c61622e72657365617263682e676f6f676c652e636f6d2f6173736574732f636f6c61622d62616467652e737667" />)</li>
  <li>there is a leaderboard running under huggingface (one can publish models to huggingface) <a href="https://huggingface.co/spaces/chrisjay/Deep-Reinforcement-Learning-Leaderboard">https://huggingface.co/spaces/chrisjay/Deep-Reinforcement-Learning-Leaderboard</a> . Just need an huggingface account for that (used my Michelin account)</li>
</ul>

<p>A guide has been recently added explaining how to tune hyperparameters using optuna. 👉 <a href="https://github.com/huggingface/deep-rl-class/blob/main/unit1/unit1_optuna_guide.ipynb">https://github.com/huggingface/deep-rl-class/blob/main/unit1/unit1_optuna_guide.ipynb</a>. Should do it!</p>

<p>To start unit2. Introduction to Q-Learning</p>

<ul>
  <li>first update from fork just by clicking<img src="https://docs.github.com/assets/cb-33131/images/help/repository/fetch-upstream-drop-down.png" alt="&quot;Fetch upstream&quot; drop-down" style="zoom:15%;" /></li>
  <li>and update your local repo (<code class="language-plaintext highlighter-rouge">git fetch</code> <code class="language-plaintext highlighter-rouge">git pull</code>)</li>
</ul>

<h1 id="unit-2---introduction-to-q-learning"><a href="https://github.com/huggingface/deep-rl-class/tree/main/unit2">Unit 2</a> - Introduction to Q-Learning</h1>

<h6 id="-part-1---we-learned-about-the-value-based-methods-and-the-difference-between-monte-carlo-and-temporal-difference-learning-then-a-quizz-easy-one">📖 <a href="https://huggingface.co/blog/deep-rl-q-part1">part 1</a> - we learned about the value-based methods and the difference between Monte Carlo and Temporal Difference Learning. Then a quizz (easy one)</h6>

<h6 id="-part-2---and-then-q-learning-which-is-an-off-policy-value-based-method-that-uses-a-td-approach-to-train-its-action-value-function-then-a-quizz-less-easier">📖 <a href="https://huggingface.co/blog/deep-rl-q-part2">part 2</a> - and then Q-learning which is an <strong>off-policy value-based method that uses a TD approach to train its action-value function</strong>. Then a quizz (less easier)</h6>

<h6 id="-hands-on-1st-algo-frozenlake-is-published-in-guillaume63q-frozenlake-v1-4x4-noslippery-2nd-algo-taxi-is-published-in-guillaume63q-taxi-v3-leaderboard-is-here">👩‍💻 <a href="https://colab.research.google.com/github/huggingface/deep-rl-class/blob/main/unit2/unit2.ipynb">hands-on</a>. 1st algo (FrozenLake) is published in <a href="https://huggingface.co/Guillaume63/q-FrozenLake-v1-4x4-noSlippery">Guillaume63/q-FrozenLake-v1-4x4-noSlippery</a>. 2nd algo (Taxi) is published in <a href="https://huggingface.co/Guillaume63/q-Taxi-v3">Guillaume63/q-Taxi-v3</a>. Leaderboard is <a href="https://huggingface.co/spaces/chrisjay/Deep-Reinforcement-Learning-Leaderboard">here</a></h6>

<h1 id="unit-3---deep-q-learning-with-atari-games"><a href="https://github.com/huggingface/deep-rl-class/tree/main/unit3">Unit 3</a> - Deep Q-Learning with Atari Games</h1>

<h6 id="-the-deep-q-learning-chapter----httpshuggingfacecoblogdeep-rl-dqn">📖 The Deep Q-Learning chapter 👾 👉  <a href="https://huggingface.co/blog/deep-rl-dqn">https://huggingface.co/blog/deep-rl-dqn</a></h6>

<h6 id="-start-the-hands-on-here--httpscolabresearchgooglecomgithubhuggingfacedeep-rl-classblobmainunit3unit3ipynb">👩‍💻 Start the hands-on here 👉 <a href="https://colab.research.google.com/github/huggingface/deep-rl-class/blob/main/unit3/unit3.ipynb">https://colab.research.google.com/github/huggingface/deep-rl-class/blob/main/unit3/unit3.ipynb</a></h6>

<p>from discord, a video (30’) by Antonin Raffin about <a href="https://www.youtube.com/watch?v=AidFTOdGNFQ">Automatic Hyperparameter Optimization @ ICRA 22 - Tools for Robotic RL 6/8</a>. Never thought about it that way, it can help to speed training phase.</p>

<p>from discord as well a video to build a <a href="https://www.youtube.com/watch?v=eBCU-tqLGfQ">doom ai model</a> (3 hours!)</p>

<p>and from discord a lecture from Pieter Abbeel explaining Q-value to DQN and why we have this double network at <a href="https://www.youtube.com/watch?v=Psrhxy88zww">L2 Deep Q-Learning (Foundations of Deep RL Series</a>. This is part of a larger lecture available at <a href="https://www.youtube.com/watch?v=2GwBez0D20A&amp;list=PLwRJQ4m4UJjNymuBM9RdmB3Z9N5-0IlY0">Foundations of Deep RL – 6-lecture series by Pieter Abbeel</a></p>

<p>And then a video explaining <a href="https://agarwl.github.io/rliable/">Deep RL at the Edge of the Statistical Precipice</a>. This was from a paper at Neurips.</p>

<h1 id="unit-4---an-introduction-to-unity-ml-agents-with-hugging-face-"><a href="https://github.com/huggingface/deep-rl-class/tree/main/unit4">Unit 4</a> - An Introduction to <strong>Unity ML-Agents with Hugging Face 🤗</strong></h1>

<h6 id="-tutorial--httpslinkmediumcomkopvpdyz4qb">📖 <strong>tutorial</strong> 👉 https://link.medium.com/KOpvPdyz4qb</h6>

<p>Thomas starts with evolutions on RL domain, citing <a href="https://huggingface.co/blog/decision-transformers">Decision Transformers</a> as one of the last hot topic. And then introduces Unity and how it can now be used with RL agents.</p>

<p><img src="https://miro.medium.com/max/1400/0*kYixBHKWwmY65Mg_" alt="unity ML-Agents toolkit" /></p>

<p>Interesting idea to introduce <a href="https://medium.com/data-from-the-trenches/curiosity-driven-learning-through-next-state-prediction-f7f4e2f592fa">curiosity</a> and to make it real as an intrinsic reward.</p>

<blockquote>
  <p><em>Note: It guided me to gentle introductions to <a href="https://machinelearningmastery.com/cross-entropy-for-machine-learning/">cross-entropy for machine learning</a> and <a href="https://machinelearningmastery.com/what-is-information-entropy/">information entropy</a>.</em></p>

  <ul>
    <li>
      <p><em><strong>Low Probability Event</strong> (surprising): More information. High entropy.</em></p>
    </li>
    <li>
      <p><em><strong>Higher Probability Event</strong> (unsurprising): Less information. Low entropy.</em></p>
    </li>
    <li>
      <p><em><strong>Skewed Probability Distribution</strong> (unsurprising): Low entropy.</em></p>
    </li>
    <li>
      <p><em><strong>Balanced Probability Distribution</strong> (surprising): High entropy.</em></p>
    </li>
  </ul>

  <span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>I</mi><mi>n</mi><mi>f</mi><mi>o</mi><mi>r</mi><mi>m</mi><mi>a</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi><mo>:</mo><mspace linebreak="newline"></mspace><mi>h</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><mi>log</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>P</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Information:

\\h(x)=-\log(P(x))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">or</span><span class="mord mathnormal">ma</span><span class="mord mathnormal">t</span><span class="mord mathnormal">i</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">))</span></span></span></span></span>

  <span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>E</mi><mi>n</mi><mi>t</mi><mi>r</mi><mi>o</mi><mi>p</mi><mi>y</mi><mo>:</mo><mspace linebreak="newline"></mspace><mi>H</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo><mo>=</mo><mtext>–</mtext><munder><mo>∑</mo><mrow><mi>x</mi><mo>∈</mo><mi>X</mi></mrow></munder><mi>P</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mi>log</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>P</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Entropy:
\\H(X) = – \sum_{x \in X} P(x)  \log(P(x))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mord mathnormal">ro</span><span class="mord mathnormal">p</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.3717em;vertical-align:-1.3217em;"></span><span class="mord">–</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8557em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mrel mtight">∈</span><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3217em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">))</span></span></span></span></span>

  <span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>C</mi><mi>r</mi><mi>o</mi><mi>s</mi><mi>s</mi><mo>−</mo><mi>E</mi><mi>n</mi><mi>t</mi><mi>r</mi><mi>o</mi><mi>p</mi><mi>y</mi><mo>:</mo><mspace linebreak="newline"></mspace><mi>H</mi><mo stretchy="false">(</mo><mi>P</mi><mo separator="true">,</mo><mi>Q</mi><mo stretchy="false">)</mo><mo>=</mo><mtext>–</mtext><munder><mo>∑</mo><mrow><mi>x</mi><mo>∈</mo><mi>X</mi></mrow></munder><mi>P</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mi>log</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>Q</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Cross-Entropy:\\H(P, Q) = – \sum_{x \in X} P(x)  \log(Q(x))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">ross</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mord mathnormal">ro</span><span class="mord mathnormal">p</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">Q</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.3717em;vertical-align:-1.3217em;"></span><span class="mord">–</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8557em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mrel mtight">∈</span><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3217em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord mathnormal">Q</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">))</span></span></span></span></span>

  <p>Cross-Entropy and KL divergence are similar but not exactly the same. Specifically, the KL divergence measures a very similar quantity to  cross-entropy. It measures the average number of extra bits required to  represent a message with Q instead of P, not the total number of bits.</p>

  <span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>K</mi><mi>L</mi><mtext> </mtext><mi>D</mi><mi>i</mi><mi>v</mi><mi>e</mi><mi>r</mi><mi>g</mi><mi>e</mi><mi>n</mi><mi>c</mi><mi>e</mi><mtext> </mtext><mo stretchy="false">(</mo><mi>r</mi><mi>e</mi><mi>l</mi><mi>a</mi><mi>t</mi><mi>i</mi><mi>v</mi><mi>e</mi><mtext> </mtext><mi>e</mi><mi>n</mi><mi>t</mi><mi>r</mi><mi>o</mi><mi>p</mi><mi>y</mi><mo stretchy="false">)</mo><mo>:</mo><mspace linebreak="newline"></mspace><mi>K</mi><mi>L</mi><mo stretchy="false">(</mo><mi>P</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>Q</mi><mo stretchy="false">)</mo><mo>=</mo><mtext>–</mtext><munder><mo>∑</mo><mrow><mi>x</mi><mo>∈</mo><mi>X</mi></mrow></munder><mi>P</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mfrac><mrow><mi>log</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>Q</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><mrow><mi>log</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>P</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow></mfrac><mspace linebreak="newline"></mspace><mi>H</mi><mo stretchy="false">(</mo><mi>P</mi><mo separator="true">,</mo><mi>Q</mi><mo stretchy="false">)</mo><mo>=</mo><mi>H</mi><mo stretchy="false">(</mo><mi>P</mi><mo stretchy="false">)</mo><mo>+</mo><mi>K</mi><mi>L</mi><mo stretchy="false">(</mo><mi>P</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>Q</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">KL\ Divergence\ (relative\ entropy):
\\KL(P||Q)=– \sum_{x \in X} P(x)  \frac{\log(Q(x))}{\log(P(x))}
\\H(P, Q) = H(P) + KL(P || Q)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mord mathnormal">L</span><span class="mspace"> </span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal" style="margin-right:0.02778em;">er</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mord mathnormal">ce</span><span class="mspace"> </span><span class="mopen">(</span><span class="mord mathnormal">re</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">e</span><span class="mspace"> </span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mord mathnormal">ro</span><span class="mord mathnormal">p</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord">∣∣</span><span class="mord mathnormal">Q</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.7487em;vertical-align:-1.3217em;"></span><span class="mord">–</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8557em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mrel mtight">∈</span><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3217em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">))</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord mathnormal">Q</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">))</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">Q</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord">∣∣</span><span class="mord mathnormal">Q</span><span class="mclose">)</span></span></span></span></span>

</blockquote>

<h6 id="-here-are-the-steps-for-the-training">👩‍💻 Here are the steps for the training:</h6>

<ul>
  <li>clone repo and install environment</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># from ~/git/guillaume</span>
git clone https://github.com/huggingface/ml-agents/
<span class="c"># bug with python 3.9 - https://github.com/Unity-Technologies/ml-agents/issues/5689</span>
conda create  <span class="nt">--name</span> ml-agents <span class="nv">python</span><span class="o">=</span>3.8
conda activate ml-agents
<span class="c"># Go inside the repository and install the package </span>
<span class="nb">cd </span>ml-agents 
pip <span class="nb">install</span> <span class="nt">-e</span> ./ml-agents-envs 
pip <span class="nb">install</span> <span class="nt">-e</span> ./ml-agents
</code></pre></div></div>

<ul>
  <li>download the Environment Executable (pyramids from <a href="https://drive.google.com/drive/folders/1cjUOCB6gikJHmOnoQ5R9oM7-_zAFXuA2">google drive</a>)</li>
</ul>

<p>Unzip it and place it inside the MLAgents cloned repo <strong>in a new folder called trained-envs-executables/linux</strong></p>

<ul>
  <li>modify nbr of steps to 1000000 in <code class="language-plaintext highlighter-rouge">config/ppo/PyramidsRND.yaml</code></li>
  <li>train</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>mlagents-learn config/ppo/PyramidsRND.yaml <span class="nt">--env</span><span class="o">=</span>training-envs-executables/linux/Pyramids/Pyramids <span class="nt">--run-id</span><span class="o">=</span><span class="s2">"First Training"</span> <span class="nt">--no-graphics</span>
</code></pre></div></div>

<ul>
  <li>monitor training</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>tensorboard <span class="nt">--logdir</span> results <span class="nt">--port</span> 6006
</code></pre></div></div>

<p>(auto reload is off by default this day, click settings and check Reload data) (because I have installed v2.3.0 and not 2.4.0, there is <a href="https://github.com/tensorflow/tensorboard/issues/1946">no autofit domain to data</a> and it is annoying)</p>

<ul>
  <li>push to 🤗 Hub</li>
</ul>

<p>Create a new token (https://huggingface.co/settings/tokens) <strong>with write role</strong></p>

<p>Copy the token, Run this and past the token <code class="language-plaintext highlighter-rouge">huggingface-cli login</code></p>

<p>Push to Hub</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>mlagents-push-to-hf <span class="nt">--run-id</span><span class="o">=</span><span class="s1">'First Training'</span> <span class="nt">--local-dir</span><span class="o">=</span><span class="s1">'results/First Training'</span> <span class="nt">--repo-id</span><span class="o">=</span><span class="s1">'Guillaume63/MLAgents-Pyramids'</span> <span class="nt">--commit-message</span><span class="o">=</span><span class="s1">'Trained pyramids agent upload'</span>
</code></pre></div></div>

<p>and now I can play it from <a href="https://huggingface.co/Guillaume63/MLAgents-Pyramids">https://huggingface.co/Guillaume63/MLAgents-Pyramids</a> and watch your Agent play…</p>

<h1 id="unit-5---policy-gradient-with-pytorch"><a href="https://github.com/huggingface/deep-rl-class/tree/main/unit5">Unit 5</a> - Policy Gradient with PyTorch</h1>

<h6 id="1️⃣--read-policy-gradient-with-pytorch-chapter">1️⃣ 📖 <strong>Read <a href="https://huggingface.co/blog/deep-rl-pg">Policy Gradient with PyTorch Chapter</a></strong>.</h6>

<p>Advantage and disadvantage of policy gradient vs DQN.</p>

<p>Reinforce algorithm (Monte Carlo policy gradient): it uses an estimated return from an entire episode to update the policy parameters.</p>

<p>The output of it is a probability distribution of actions. And we try to maximize J(θ) which is this estimated return. (details of Policy Gradient theorem in this <a href="https://www.youtube.com/watch?v=AKbX1Zvo7r8&amp;ab_channel=PieterAbbeel">video</a> from Pieter Abbeel)</p>

<p>We will update weights using this gradient: 
<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>θ</mi><mo>←</mo><mi>θ</mi><mo>+</mo><mi>α</mi><msub><mi mathvariant="normal">∇</mi><mi>θ</mi></msub><mi>J</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\theta \gets  \theta + \alpha\nabla_\theta J(\theta)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mord"><span class="mord">∇</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span></span></span>
<img src="https://huggingface.co/blog/assets/85_policy_gradient/pg.jpg" alt="" /></p>

<ul>
  <li>
    <p>$\nabla_\theta\log\pi_\theta(a_t | s_t)$ is the direction of <strong>steepest increase of the (log) probability</strong> of selecting action at from state $s_t$. =&gt; This tells use <strong>how we should change the weights of policy</strong> if we want to increase/decrease the log probability of selecting action at state $s_t$.</p>
  </li>
  <li>
    <p>$R(\tau)$ is the scoring function:</p>

    <ul>
      <li>If the return is high, it will push up the probabilities of the (state, action) combinations.</li>
      <li>Else, if the return is low, it will push down the probabilities of the (state, action) combinations.</li>
    </ul>
  </li>
</ul>

<h6 id="2️⃣--then-dive-on-the-hands-on-where-youll-code-your-first-deep-reinforcement-learning-algorithm-from-scratch-reinforce">2️⃣ 👩‍💻 Then dive on the hands-on where you’ll <strong>code your first Deep Reinforcement Learning algorithm from scratch: Reinforce</strong>.</h6>

<p>👉 <a href="https://colab.research.google.com/github/huggingface/deep-rl-class/blob/main/unit5/unit5.ipynb">https://colab.research.google.com/github/huggingface/deep-rl-class/blob/main/unit5/unit5.ipynb</a></p>

<p>1st model is Cartpole. After training on 10’000 episodes, perfect score of 500 +- 0. Thomas pointed me to a <a href="https://www.youtube.com/watch?v=Ikngt0_DXJg&amp;ab_channel=ANITIToulouse">video</a> (3h) from Aniti where Antonin Raffin gives some tips and tricks. And points to many papers such as <a href="https://arxiv.org/abs/1709.06560">Deep Reinforcement Learning that Matters</a> (in zotero)</p>

<p>2nd model is Pixelcopter. High level of variance in perf. Recommended by Thomas to tune hyper parameters (optuna?).</p>

<p>3rd model is Pong.</p>]]></content><author><name></name></author><category term="reinforcement learning" /><category term="huggingface" /><summary type="html"><![CDATA[par Thomas Simonini]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://castorfou.github.io/guillaume_blog/images/RL.png" /><media:content medium="image" url="https://castorfou.github.io/guillaume_blog/images/RL.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>